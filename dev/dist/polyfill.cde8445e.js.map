{"version":3,"sources":["src/performance-now.coffee","node_modules/raf/index.js","node_modules/raf/polyfill.js"],"names":[],"mappings":"AEAA;ADAA,ACCA;ADAA,ADDA;ACEA,ADFA,MAAA;ACGA;AACA,EDJA,IAAG,4DAAA,IAAiB,WAAW,CAAC,GAAhC;ACKA,IDJE,MAAM,CAAC,OAAP,GAAiB,SAAA;ACKnB,aDLsB,WAAW,CAAC,GAAZ,CAAA;ACMtB,IDNmB,EADnB;ACQA,GDRA,MAEK,IAAG,oDAAA,IAAa,OAAO,CAAC,MAAxB;ACOL,IDNE,MAAM,CAAC,OAAP,GAAiB,SAAA;ACOnB,aDPsB,CAAC,cAAA,CAAA,CAAA,GAAmB,YAApB,CAAA,GAAoC;ACQ1D,IDRmB;ACSnB,IDRE,MAAA,GAAS,OAAO,CAAC;ACSnB,IDRE,cAAA,GAAiB,SAAA;ACSnB,ADRI,UAAA;ACSJ,MDTI,EAAA,GAAK,MAAA,CAAA;ACUT,aDTI,EAAG,CAAA,CAAA,CAAH,GAAQ,GAAR,GAAc,EAAG,CAAA,CAAA;ACUrB,IDZmB;ACanB,IDVE,cAAA,GAAiB,cAAA,CAAA;ACWnB,IDVE,MAAA,GAAS,OAAO,CAAC,MAAR,CAAA,CAAA,GAAmB;ACW9B,IDVE,YAAA,GAAe,cAAA,GAAiB,OAR7B;ACmBL,GDnBK,MASA,IAAG,IAAI,CAAC,GAAR;ACWL,IDVE,MAAM,CAAC,OAAP,GAAiB,SAAA;ACWnB,aDXsB,IAAI,CAAC,GAAL,CAAA,CAAA,GAAa;ACYnC,IDZmB;ACanB,IDZE,QAAA,GAAW,IAAI,CAAC,GAAL,CAAA,EAFR;ACeL,GDfK,MAAA;ACgBL,IDZE,MAAM,CAAC,OAAP,GAAiB,SAAA;ACanB,aDb0B,IAAA,IAAA,CAAA,CAAM,CAAC,OAAP,CAAA,CAAJ,GAAuB;ACc7C,IDdmB;ACenB,IDdE,QAAA,GAAe,IAAA,IAAA,CAAA,CAAM,CAAC,OAAP,CAAA,EALZ;ACoBL;AACA,ADhCA;ACiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"polyfill.cde8445e.js","sourceRoot":"../..","sourcesContent":["if performance? and performance.now\n  module.exports = -> performance.now()\nelse if process? and process.hrtime\n  module.exports = -> (getNanoSeconds() - nodeLoadTime) / 1e6\n  hrtime = process.hrtime\n  getNanoSeconds = ->\n    hr = hrtime()\n    hr[0] * 1e9 + hr[1]\n  moduleLoadTime = getNanoSeconds()\n  upTime = process.uptime() * 1e9\n  nodeLoadTime = moduleLoadTime - upTime\nelse if Date.now\n  module.exports = -> Date.now() - loadTime\n  loadTime = Date.now()\nelse\n  module.exports = -> new Date().getTime() - loadTime\n  loadTime = new Date().getTime()\n","var now = require('performance-now')\n  , root = typeof window === 'undefined' ? global : window\n  , vendors = ['moz', 'webkit']\n  , suffix = 'AnimationFrame'\n  , raf = root['request' + suffix]\n  , caf = root['cancel' + suffix] || root['cancelRequest' + suffix]\n\nfor(var i = 0; !raf && i < vendors.length; i++) {\n  raf = root[vendors[i] + 'Request' + suffix]\n  caf = root[vendors[i] + 'Cancel' + suffix]\n      || root[vendors[i] + 'CancelRequest' + suffix]\n}\n\n// Some versions of FF have rAF but not cAF\nif(!raf || !caf) {\n  var last = 0\n    , id = 0\n    , queue = []\n    , frameDuration = 1000 / 60\n\n  raf = function(callback) {\n    if(queue.length === 0) {\n      var _now = now()\n        , next = Math.max(0, frameDuration - (_now - last))\n      last = next + _now\n      setTimeout(function() {\n        var cp = queue.slice(0)\n        // Clear queue here to prevent\n        // callbacks from appending listeners\n        // to the current frame's queue\n        queue.length = 0\n        for(var i = 0; i < cp.length; i++) {\n          if(!cp[i].cancelled) {\n            try{\n              cp[i].callback(last)\n            } catch(e) {\n              setTimeout(function() { throw e }, 0)\n            }\n          }\n        }\n      }, Math.round(next))\n    }\n    queue.push({\n      handle: ++id,\n      callback: callback,\n      cancelled: false\n    })\n    return id\n  }\n\n  caf = function(handle) {\n    for(var i = 0; i < queue.length; i++) {\n      if(queue[i].handle === handle) {\n        queue[i].cancelled = true\n      }\n    }\n  }\n}\n\nmodule.exports = function(fn) {\n  // Wrap in a new function to prevent\n  // `cancel` potentially being assigned\n  // to the native rAF function\n  return raf.call(root, fn)\n}\nmodule.exports.cancel = function() {\n  caf.apply(root, arguments)\n}\nmodule.exports.polyfill = function(object) {\n  if (!object) {\n    object = root;\n  }\n  object.requestAnimationFrame = raf\n  object.cancelAnimationFrame = caf\n}\n","require('./').polyfill()\n"]}