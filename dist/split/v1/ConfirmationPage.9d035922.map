{"version":3,"sources":["0","Components/helpers/scrollToPoint.js","Components/PaymentForm.js","Components/Spinner.js","Components/ConfirmationPage.js"],"names":["module","exports","form-panel","hidden","scrollToPoint","top","docHeight","document","documentElement","scrollHeight","winHeight","window","innerHeight","speed","initialPoint","scrollY","pageYOffset","scrollDown","requestAnimationFrame","winScroll","timestamp","scroll","cancelAnimationFrame","offsetTop","el","rect","getBoundingClientRect","scrollTop","PaymentForm","props","state","formAction","cssConfig","Component","formData","cookie","lifetime","localStorage","setItem","forms","hiddenform","submit","click","target","getElementById","inputs","Object","keys","map","k","i","JSON","stringify","loading_spinner","loading_spinner__flames","loading_spinner__back","flamerotate","Spinner","ConfirmationPage","handleUnload","e","returnValue","mode","ready","getGlobals","bind","handleMessage","reRenderForm","renderReceiptPage","addEventListener","url","devServicesUri","preProdServicesUri","prodServicesUri","devReceiptUri","preProdReceiptUri","prodReceiptUri","setState","console","error","data","parse","type","origin","tracking_vars","hydrateForm","varsArray","nextProps","nextState","removeEventListener"],"mappings":"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","file":"ConfirmationPage.9d035922.map","sourceRoot":"../../../src","sourcesContent":[null,"/**\n * Function to scroll to a particular point on the DOM\n * @param {Number} top - pageYoffset of form\n */\nexport function scrollToPoint(top) {\n    const docHeight = document.documentElement.scrollHeight;\n    const winHeight = window.innerHeight;\n    const speed = 40;\n    const initialPoint = window.scrollY ? window.scrollY : window.pageYOffset;\n    const scrollDown = top >= initialPoint;\n\n    if (scrollDown) {\n        top = top > docHeight - winHeight ? docHeight - winHeight : top;\n    } else {\n        top = docHeight <= winHeight ? 0 : top;\n    }\n\n    window.requestAnimationFrame(winScroll);\n\n    function winScroll(timestamp) {\n        let scroll = window.scrollY ? window.scrollY : window.pageYOffset;\n        if (scrollDown) {\n            if (scroll >= top) {\n                return window.cancelAnimationFrame(timestamp);\n            }\n            scroll += speed;\n        } else {\n           \n            if (scroll <= top) {\n                return window.cancelAnimationFrame(timestamp);\n            }\n            scroll -= speed;\n        }\n        window.scroll(0, scroll);\n        window.requestAnimationFrame(winScroll);\n    }\n}\n\n/**\n * \n * @param {Node} el - DOM Element\n * @returns {Number} - integer representing offsetTop of the element relative to the viewport\n */\nexport function offsetTop (el) {\n    const rect = el.getBoundingClientRect(),\n    scrollTop = window.scrollY ? window.scrollY : window.pageYOffset;\n    return rect.top + scrollTop;\n}","import React, {Component} from 'react';\n\nimport styles from './styles/payment-form.module.css'\n\nimport {crypt} from './helpers/crypt'\nimport {scrollToPoint, offsetTop} from './helpers/scrollToPoint'\n\nclass PaymentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            formAction: props.formAction,\n            cssConfig: props.cssConfig\n        }\n    }\n    componentDidMount() {\n        const {formData} = this.props;\n        const lifetime = 60 * 1000; // 60 seconds * 1000 milliseconds\n        const cookie = crypt({formData, lifetime})\n        localStorage.setItem(\"store\", cookie);\n\n        document.forms.hiddenform.submit.click();\n        \n        // scroll to top of form\n        const target = document.getElementById('react-form-top');\n        const top = offsetTop(target);\n        // console.log({top})\n        scrollToPoint(top);\n    }\n    render() {\n        const {formData} = this.props;\n        const keys = Object.keys(formData)\n        const inputs = keys.map((k,i)=><input key={i + \"-\" + k} name={k} value={formData[k] ? formData[k] : ''} type=\"hidden\"/>)\n        // console.log(JSON.stringify(this.props.cssConfig))\n        return (\n            <React.Fragment>\n                <form id=\"hiddenform\" styleName=\"styles.hidden\" action={this.state.formAction} method=\"POST\" target=\"paymentprocess\">\n                    {inputs}\n                    <input type='hidden' name=\"cssVars\" value={JSON.stringify(this.state.cssConfig)}/> \n                    <input id=\"submit\" type=\"submit\" hidden/>\n                </form>\n                <iframe styleName=\"styles.form-panel\" name=\"paymentprocess\" width=\"100%\" height=\"1000px\"></iframe>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default PaymentForm","import React from 'react'\nimport styles from './styles/spinner.module.css'\n\nfunction Spinner () {\n    return (\n        <div styleName=\"styles.loading_spinner\">\n            <img styleName=\"styles.loading_spinner__flames\" src=\"//www1.cbn.com/sites/all/themes/cbn_default/images/spinner/cbn-flame-circle.png\"/>\n            <img styleName=\"styles.loading_spinner__back\" src=\"//www1.cbn.com/sites/all/themes/cbn_default/images/spinner/loader-spinner@3x.png\"/>\n        </div>\n    )\n}\n\nexport default Spinner","import React, { Component } from 'react'\n\nimport PaymentForm from './PaymentForm'\nimport Spinner from './Spinner'\n\nimport {callApi} from './helpers/fetch-helpers'\n\nfunction handleUnload(e){\n    e.returnValue = \"Are you sure you want to go back?\\n You may lose all your changes to this page.\"\n    return \"Are you sure you want to go back?\\n You may lose all your changes to this page.\"\n}\n\nfunction handleUnload(e){\n    e.returnValue = \"Are you sure you want to go back?\\n You may lose all your changes to this page.\"\n    return \"Are you sure you want to go back?\\n You may lose all your changes to this page.\"\n}\n\nclass ConfirmationPage extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            mode: props.mode,\n            cssConfig: props.cssConfig,\n            formData: props.formData,\n            formAction: props.formAction,\n            ready: false\n        }\n        this.getGlobals = this.getGlobals.bind(this)\n        this.handleMessage = this.handleMessage.bind(this)\n        this.reRenderForm = this.reRenderForm.bind(this)\n        this.renderReceiptPage = this.renderReceiptPage.bind(this)\n    }\n\n    componentDidMount() {\n\n        window.addEventListener('beforeunload', handleUnload)\n        window.addEventListener('message', this.handleMessage, false)   \n        this.getGlobals();\n        \n    }\n\n    async getGlobals() {\n        const url = this.state.mode == \"development\" ? 'http://securegiving.cbn.local/UI/globals/form-config.json' : 'https://securegiving.cbn.com/UI/globals/form-config.json'\n        try {\n            const {devServicesUri,preProdServicesUri,prodServicesUri,devReceiptUri,preProdReceiptUri,prodReceiptUri} = await callApi(url)\n            this.setState({ready: true, devServicesUri, devReceiptUri, preProdServicesUri, preProdReceiptUri, prodServicesUri, prodReceiptUri})\n        } catch (err) {\n            console.error(err);\n        }\n    }\n\n    handleMessage(e) {\n        const data = e.data ? JSON.parse(e.data) : {}\n        if (data.type !== \"go back clicked\" && data.type !==\"render receipt\") {\n            return;\n        } \n        const {origin} = e;\n        const isOrigin = this.state.mode == \"development\" ? origin == this.state.devServicesUri || origin == this.state.preProdServicesUri : origin == this.state.prodServicesUri;\n        if (!isOrigin) {\n            return\n        }\n        if (data.type === \"go back clicked\") {\n            this.reRenderForm(this.state.formData);\n        } else if (data.type === \"render receipt\") {\n            // console.log('Render Receipt')\n            // console.log({tracking_vars:data.tracking_vars})\n            this.renderReceiptPage(data.tracking_vars);\n        }\n        return;\n    }\n\n    reRenderForm(data) {\n        this.props.hydrateForm(data);\n    }\n\n    renderReceiptPage(varsArray) {\n        this.props.renderReceiptPage(varsArray);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.state.ready !== nextState.ready) {\n            return true\n        }\n        return false\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('beforeunload', handleUnload)\n        window.removeEventListener('message', this.handleMessage)\n    }\n\n    render() {\n\n        return ( \n            <React.Fragment>\n            { this.state.ready ? (\n                    <PaymentForm cssConfig={this.state.cssConfig} formAction={this.state.formAction} formData={this.state.formData}  />                \n                ) : (\n                    <Spinner />\n                )\n            }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default ConfirmationPage"]}