{"version":3,"sources":["../node_modules/get-css-data/dist/get-css-data.esm.js","../node_modules/balanced-match/index.js","../src/parse-css.js","../src/stringify-css.js","../src/walk-css.js","../src/transform-css.js","../src/index.js"],"names":["getUrls","urls","options","arguments","length","undefined","settings","mimeType","onBeforeSend","Function","prototype","onSuccess","onError","onComplete","urlArray","Array","isArray","urlQueue","apply","map","x","isValidCss","cssText","isHTML","trim","charAt","xhr","urlIndex","responseText","returnVal","indexOf","parser","document","createElement","forEach","url","i","setAttribute","href","String","isIElte9","Boolean","all","window","atob","isIElte9CORS","host","split","location","isSameProtocol","protocol","xdr","XDomainRequest","open","timeout","onprogress","ontimeout","onload","onerror","err","setTimeout","send","console","warn","concat","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","getCssData","regex","cssComments","cssImports","rootElement","include","exclude","filter","useCSSOM","sourceNodes","querySelectorAll","node","matchesSelector","cssArray","handleComplete","isComplete","join","handleSuccess","cssIndex","sourceUrl","resolveImports","resolvedCssText","errorData","data","test","parseImportData","baseUrl","ignoreRules","importData","rules","replace","match","rule","absoluteUrls","getFullUrl","absoluteRules","oldUrl","newUrl","callbackFn","__errorData","__errorRules","responseImportData","push","responseArray","importText","linkHref","getAttribute","linkRel","isLink","nodeName","toLowerCase","isStyle","textContent","sheet","cssRules","base","d","implementation","createHTMLDocument","b","a","head","appendChild","body","elm","selector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","balanced","str","RegExp","maybeMatch","r","range","start","end","pre","slice","post","reg","m","begs","beg","left","right","result","ai","bi","pop","cssParse","css","defaults","onlyVars","removeComments","_extends","errors","error","msg","Error","re","exec","close","whitespace","comment","type","comments","cmnts","c","s","declaration","comment_regexp","prop","val","ret","property","value","declarations","decls","keyframe","vals","values","at_keyframes","vendor","name","frame","frames","keyframes","at_page","sel","selectors","at_fontface","at_supports","supports","at_host","at_media","media","at_custom_m","at_document","at_x","at_rule","hasVarFunc","some","decl","arr","obj","balancedMatch","hasVarDecl","core","stylesheet","stringifyCss","tree","delim","cb","renderMethods","charset","visit","import","namespace","page","nodes","buf","n","txt","walkCss","fn","VAR_PROP_IDENTIFIER","VAR_FUNC_IDENTIFIER","variableStore","dom","temp","user","transformVars","fixNestedCalc","persist","preserve","variables","onWarning","JSON","parse","stringify","cssTree","parseCss","varNameIndices","splice","Object","keys","key","newRule","resolvedValue","resolveValue","reCalcExp","oldValue","newValue","rootCalc","nestedCalc","__recursiveFallback","valueData","warningIntro","resolveFunc","fallback","hasOwnProperty","replacement","unresolvedFallback","isEmptyVarFunc","isBrowser","isNativeSupport","CSS","onlyLegacy","shadowDOM","silent","updateDOM","updateURLs","watch","cssKeyframes","cssRootRules","cssUrls","cssVars","cssVarsObserver","isShadowDOMReady","styleNodeId","pkgName","handleError","message","sourceNode","handleWarning","isShadowElm","shadowRoot","targetElm","documentElement","style","setProperty","cssRootDecls","nodeArray","transformCss","addMutationObserver","disconnect","cssUrl","responseUrl","responseURL","statusText","errorMsg","cssMarker","styleNode","hasKeyframes","group1","lastNode","querySelector","nextSibling","parentNode","insertBefore","fixKeyframes","errorThrown","errorNode","elms","shadowSettings","addEventListener","init","evt","removeEventListener","ignoreId","MutationObserver","tagName","id","debounceTimer","mutations","isUpdateMutation","mutation","target","addedNodes","removedNodes","isValidLink","disabled","isValidStyle","clearTimeout","observe","attributes","attributeFilter","childList","subtree","animationNameProp","getComputedStyle","allNodes","getElementsByTagName","keyframeNodes","nameMarker","len","animationName","offsetHeight","nodeStyle"],"mappings":"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","file":"css-vars-ponyfill.esm.9e0932d1.map","sourceRoot":"..","sourcesContent":["/*!\n * get-css-data\n * v1.6.3\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018-2019 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction getUrls(urls) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var settings = {\n        mimeType: options.mimeType || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {\n        return null;\n    });\n    function isValidCss() {\n        var cssText = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n        var isHTML = cssText.trim().charAt(0) === \"<\";\n        return !isHTML;\n    }\n    function onError(xhr, urlIndex) {\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\n    }\n    function onSuccess(responseText, urlIndex) {\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n        responseText = returnVal === false ? \"\" : returnVal || responseText;\n        urlQueue[urlIndex] = responseText;\n        if (urlQueue.indexOf(null) === -1) {\n            settings.onComplete(urlQueue);\n        }\n    }\n    var parser = document.createElement(\"a\");\n    urlArray.forEach(function(url, i) {\n        parser.setAttribute(\"href\", url);\n        parser.href = String(parser.href);\n        var isIElte9 = Boolean(document.all && !window.atob);\n        var isIElte9CORS = isIElte9 && parser.host.split(\":\")[0] !== location.host.split(\":\")[0];\n        if (isIElte9CORS) {\n            var isSameProtocol = parser.protocol === location.protocol;\n            if (isSameProtocol) {\n                var xdr = new XDomainRequest();\n                xdr.open(\"GET\", url);\n                xdr.timeout = 0;\n                xdr.onprogress = Function.prototype;\n                xdr.ontimeout = Function.prototype;\n                xdr.onload = function() {\n                    if (isValidCss(xdr.responseText)) {\n                        onSuccess(xdr.responseText, i);\n                    } else {\n                        onError(xdr, i);\n                    }\n                };\n                xdr.onerror = function(err) {\n                    onError(xdr, i);\n                };\n                setTimeout(function() {\n                    xdr.send();\n                }, 0);\n            } else {\n                console.warn(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol (\".concat(url, \")\"));\n                onError(null, i);\n            }\n        } else {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            if (settings.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(settings.mimeType);\n            }\n            settings.onBeforeSend(xhr, url, i);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200 && isValidCss(xhr.responseText)) {\n                        onSuccess(xhr.responseText, i);\n                    } else {\n                        onError(xhr, i);\n                    }\n                }\n            };\n            xhr.send();\n        }\n    });\n}\n\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {object}   [options.useCSSOM=false] Determines if CSS data will be\n *                   collected from a stylesheet's runtime values instead of its\n *                   text content. This is required to get accurate CSS data\n *                   when a stylesheet has been modified using the deleteRule()\n *                   or insertRule() methods because these modifications will\n *                   not be reflected in the stylesheet's text content.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     rootElement: document,\n *     include    : 'style,link[rel=\"stylesheet\"]',\n *     exclude    : '[href=\"skip.css\"]',\n *     filter     : /red/,\n *     useCSSOM   : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray, nodeArray) {\n *       // ...\n *     }\n *   });\n */ function getCssData(options) {\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n    };\n    var settings = {\n        rootElement: options.rootElement || document,\n        include: options.include || 'style,link[rel=\"stylesheet\"]',\n        exclude: options.exclude || null,\n        filter: options.filter || null,\n        useCSSOM: options.useCSSOM || false,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var sourceNodes = Array.apply(null, settings.rootElement.querySelectorAll(settings.include)).filter(function(node) {\n        return !matchesSelector(node, settings.exclude);\n    });\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {\n        return null;\n    });\n    function handleComplete() {\n        var isComplete = cssArray.indexOf(null) === -1;\n        if (isComplete) {\n            var cssText = cssArray.join(\"\");\n            settings.onComplete(cssText, cssArray, sourceNodes);\n        }\n    }\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n        cssText = returnVal !== undefined && Boolean(returnVal) === false ? \"\" : returnVal || cssText;\n        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {\n            if (cssArray[cssIndex] === null) {\n                errorData.forEach(function(data) {\n                    return settings.onError(data.xhr, node, data.url);\n                });\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                    cssArray[cssIndex] = resolvedCssText;\n                } else {\n                    cssArray[cssIndex] = \"\";\n                }\n                handleComplete();\n            }\n        });\n    }\n    function parseImportData(cssText, baseUrl) {\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var importData = {};\n        importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter(function(rule) {\n            return ignoreRules.indexOf(rule) === -1;\n        });\n        importData.urls = importData.rules.map(function(rule) {\n            return rule.replace(regex.cssImports, \"$1\");\n        });\n        importData.absoluteUrls = importData.urls.map(function(url) {\n            return getFullUrl(url, baseUrl);\n        });\n        importData.absoluteRules = importData.rules.map(function(rule, i) {\n            var oldUrl = importData.urls[i];\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n            return rule.replace(oldUrl, newUrl);\n        });\n        return importData;\n    }\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\n        if (importData.rules.length) {\n            getUrls(importData.absoluteUrls, {\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                    settings.onBeforeSend(xhr, node, url);\n                },\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\n                    responseImportData.rules.forEach(function(rule, i) {\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                    });\n                    return cssText;\n                },\n                onError: function onError(xhr, url, urlIndex) {\n                    __errorData.push({\n                        xhr: xhr,\n                        url: url\n                    });\n                    __errorRules.push(importData.rules[urlIndex]);\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                },\n                onComplete: function onComplete(responseArray) {\n                    responseArray.forEach(function(importText, i) {\n                        cssText = cssText.replace(importData.rules[i], importText);\n                    });\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                }\n            });\n        } else {\n            callbackFn(cssText, __errorData);\n        }\n    }\n    if (sourceNodes.length) {\n        sourceNodes.forEach(function(node, i) {\n            var linkHref = node.getAttribute(\"href\");\n            var linkRel = node.getAttribute(\"rel\");\n            var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase() === \"stylesheet\";\n            var isStyle = node.nodeName === \"STYLE\";\n            if (isLink) {\n                getUrls(linkHref, {\n                    mimeType: \"text/css\",\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                        settings.onBeforeSend(xhr, node, url);\n                    },\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\n                        var sourceUrl = getFullUrl(linkHref, location.href);\n                        handleSuccess(cssText, i, node, sourceUrl);\n                    },\n                    onError: function onError(xhr, url, urlIndex) {\n                        cssArray[i] = \"\";\n                        settings.onError(xhr, node, url);\n                        handleComplete();\n                    }\n                });\n            } else if (isStyle) {\n                var cssText = node.textContent;\n                if (settings.useCSSOM) {\n                    cssText = Array.apply(null, node.sheet.cssRules).map(function(rule) {\n                        return rule.cssText;\n                    }).join(\"\");\n                }\n                handleSuccess(cssText, i, node, location.href);\n            } else {\n                cssArray[i] = \"\";\n                handleComplete();\n            }\n        });\n    } else {\n        settings.onComplete(\"\", []);\n    }\n}\n\nfunction getFullUrl(url) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n    var d = document.implementation.createHTMLDocument(\"\");\n    var b = d.createElement(\"base\");\n    var a = d.createElement(\"a\");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n    return matches.call(elm, selector);\n}\n\nexport default getCssData;\n//# sourceMappingURL=get-css-data.esm.js.map\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced from 'balanced-match';\n\n\n// Functions\n// =============================================================================\n/**\n * Parses CSS string and generates AST object\n *\n * @param {string}  css The CSS stringt to be converted to an AST\n * @param {object}  [options] Options object\n * @param {boolean} [options.onlyVars=false] Remove declarations that do not\n *                  contain a CSS variable from the return value. Note that\n *                  @font-face and @keyframe rules require all declarations to\n *                  be returned if a CSS variable is used.\n * @param {boolean} [options.removeComments=false] Remove comments from returned\n *                  object.\n * @returns {object}\n */\nfunction cssParse(css, options = {}) {\n    const defaults = {\n        onlyVars      : false,\n        removeComments: false\n    };\n    const settings = Object.assign({}, defaults, options);\n    const errors   = [];\n\n    // Errors\n    // -------------------------------------------------------------------------\n    function error(msg) {\n        throw new Error(`CSS parse error: ${msg}`);\n    }\n\n    // RegEx\n    // -------------------------------------------------------------------------\n    // Match regexp and return captures\n    function match(re) {\n        const m = re.exec(css);\n\n        if (m) {\n            css = css.slice(m[0].length);\n\n            return m;\n        }\n    }\n\n    function open() {\n        return match(/^{\\s*/);\n    }\n\n    function close() {\n        return match(/^}/);\n    }\n\n    function whitespace() {\n        match(/^\\s*/);\n    }\n\n    // Comments\n    // -------------------------------------------------------------------------\n    function comment() {\n        whitespace();\n\n        if (css[0] !== '/' || css[1] !== '*') {\n            return;\n        }\n\n        let i = 2;\n\n        while (css[i] && (css[i] !== '*' || css[i + 1] !== '/')) {\n            i++;\n        }\n\n        if (!css[i]) {\n            return error('end of comment is missing');\n        }\n\n        const str = css.slice(2, i);\n\n        css = css.slice(i + 2);\n\n        return {\n            type   : 'comment',\n            comment: str\n        };\n    }\n\n    function comments() {\n        const cmnts = [];\n        let c;\n\n        while ((c = comment())) {\n            cmnts.push(c);\n        }\n\n        return settings.removeComments ? [] : cmnts;\n    }\n\n    // Selector\n    // -------------------------------------------------------------------------\n    function selector() {\n        whitespace();\n\n        while (css[0] === '}') {\n            error('extra closing bracket');\n        }\n\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n\n        if (m) {\n            return m[0]\n                .trim() // remove all comments from selectors\n                .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n                .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n                    return m.replace(/,/g, '\\u200C');\n                })\n                .split(/\\s*(?![^(]*\\)),\\s*/)\n                .map(function(s) {\n                    return s.replace(/\\u200C/g, ',');\n                });\n        }\n    }\n\n    // Declarations\n    // -------------------------------------------------------------------------\n    function declaration() {\n        match(/^([;\\s]*)+/); // ignore empty declarations + whitespace\n\n        const comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n        let prop = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n\n        if (!prop) {\n            return;\n        }\n\n        prop = prop[0].trim();\n\n        if (!match(/^:\\s*/)) {\n            return error('property missing \\':\\'');\n        }\n\n        // Quotes regex repeats verbatim inside and outside parentheses\n        const val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n        const ret = {\n            type    : 'declaration',\n            property: prop.replace(comment_regexp, ''),\n            value   : val ? val[0].replace(comment_regexp, '').trim() : ''\n        };\n\n        match(/^[;\\s]*/);\n\n        return ret;\n    }\n\n    function declarations() {\n        if (!open()) {\n            return error('missing \\'{\\'');\n        }\n\n        let d;\n        let decls = comments();\n\n        while ((d = declaration())) {\n            decls.push(d);\n            decls = decls.concat(comments());\n        }\n\n        if (!close()) {\n            return error('missing \\'}\\'');\n        }\n\n        return decls;\n    }\n\n    // Keyframes\n    // -------------------------------------------------------------------------\n    function keyframe() {\n        whitespace();\n\n        const vals = [];\n        let m;\n\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n\n        if (vals.length) {\n            return {\n                type        : 'keyframe',\n                values      : vals,\n                declarations: declarations()\n            };\n        }\n    }\n\n    function at_keyframes() {\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n        if (!m) {\n            return;\n        }\n\n        const vendor = m[1];\n\n        m = match(/^([-\\w]+)\\s*/);\n\n        if (!m) {\n            return error('@keyframes missing name');\n        }\n\n        const name = m[1];\n\n        if (!open()) {\n            return error('@keyframes missing \\'{\\'');\n        }\n\n        let frame;\n        let frames = comments();\n\n        while ((frame = keyframe())) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n\n        if (!close()) {\n            return error('@keyframes missing \\'}\\'');\n        }\n\n        return {\n            type     : 'keyframes',\n            name     : name,\n            vendor   : vendor,\n            keyframes: frames\n        };\n    }\n\n    // @ Rules\n    // -------------------------------------------------------------------------\n    function at_page() {\n        const m = match(/^@page */);\n        if (m) {\n            const sel = selector() || [];\n            return { type: 'page', selectors: sel, declarations: declarations() };\n        }\n    }\n    function at_fontface() {\n        const m = match(/^@font-face\\s*/);\n        if (m) { return { type: 'font-face', declarations: declarations() }; }\n    }\n    function at_supports() {\n        const m = match(/^@supports *([^{]+)/);\n        if (m) { return { type: 'supports', supports: m[1].trim(), rules: rules() }; }\n    }\n    function at_host() {\n        const m = match(/^@host\\s*/);\n        if (m) { return { type: 'host', rules: rules() }; }\n    }\n    function at_media() {\n        const m = match(/^@media *([^{]+)/);\n        if (m) { return { type: 'media', media: m[1].trim(), rules: rules() }; }\n    }\n    function at_custom_m() {\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (m) { return { type: 'custom-media', name: m[1].trim(), media: m[2].trim() }; }\n    }\n    function at_document() {\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        if (m) { return { type: 'document', document: m[2].trim(), vendor: m[1] ? m[1].trim() : null, rules: rules() }; }\n    }\n    function at_x() {\n        const m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n        if (m) { return { type: m[1], name: m[2].trim() }; }\n    }\n    function at_rule() {\n        whitespace();\n\n        if (css[0] === '@') {\n            const ret = at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x();\n\n            if (ret && settings.onlyVars) {\n                let hasVarFunc = false;\n\n                // @page, @font-face\n                if (ret.declarations) {\n                    hasVarFunc = ret.declarations.some(decl => /var\\(/.test(decl.value));\n                }\n                // @keyframes, @media, @supports, etc.\n                else {\n                    const arr = ret.keyframes || ret.rules || [];\n\n                    hasVarFunc = arr.some(obj => (obj.declarations || []).some(decl => /var\\(/.test(decl.value)));\n                }\n\n                return hasVarFunc ? ret : {};\n            }\n\n            return ret;\n        }\n    }\n\n    // Rules\n    // -------------------------------------------------------------------------\n    function rule() {\n        if (settings.onlyVars) {\n            const balancedMatch = balanced('{', '}', css);\n\n            // When onlyVars:true, skip rulset if it does not contain a :root\n            // variable declaration of a variable function value\n            if (balancedMatch) {\n                const hasVarDecl = balancedMatch.pre.indexOf(':root') !== -1 && /--\\S*\\s*:/.test(balancedMatch.body);\n                const hasVarFunc = /var\\(/.test(balancedMatch.body);\n\n                if (!hasVarDecl && !hasVarFunc) {\n                    css = css.slice(balancedMatch.end + 1);\n\n                    return {};\n                }\n            }\n        }\n\n        const sel   = selector() || [];\n        const decls = !settings.onlyVars ? declarations() : declarations().filter(decl => {\n            const hasVarDecl = sel.some(s => s.indexOf(':root') !== -1) && /^--\\S/.test(decl.property);\n            const hasVarFunc = /var\\(/.test(decl.value);\n\n            return hasVarDecl || hasVarFunc;\n        });\n\n        if (!sel.length) {\n            error('selector missing');\n        }\n\n        return {\n            type        : 'rule',\n            selectors   : sel,\n            declarations: decls\n        };\n    }\n\n    function rules(core) {\n        if (!core && !open()) {\n            return error('missing \\'{\\'');\n        }\n\n        let node;\n        let rules = comments();\n\n        while (css.length && (core || css[0] !== '}') && (node = at_rule() || rule())) {\n            if (node.type) {\n                rules.push(node);\n            }\n\n            rules = rules.concat(comments());\n        }\n\n        if (!core && !close()) {\n            return error('missing \\'}\\'');\n        }\n\n        return rules;\n    }\n\n    return {\n        type: 'stylesheet',\n        stylesheet: {\n            rules: rules(true),\n            errors: errors\n        }\n    };\n}\n\n\n// Exports\n// =============================================================================\nexport default cssParse;\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Compiles CSS AST to string\n *\n * @param {object}   tree CSS AST object\n * @param {string}   [delim=''] CSS rule delimiter\n * @param {function} cb Function to be called before each node is processed\n * @returns {string}\n */\nfunction stringifyCss(tree, delim = '', cb) {\n    const renderMethods = {\n        charset(node) {\n            return '@charset ' + node.name + ';';\n        },\n        comment(node) {\n            // Preserve ponyfill marker comments\n            return node.comment.indexOf('__CSSVARSPONYFILL') === 0 ? '/*' + node.comment + '*/' : '';\n        },\n        'custom-media'(node) {\n            return '@custom-media ' + node.name + ' ' + node.media + ';';\n        },\n        declaration(node) {\n            return node.property + ':' + node.value + ';';\n        },\n        document(node) {\n            return '@' + (node.vendor || '') + 'document ' + node.document + '{' + visit(node.rules) + '}';\n        },\n        'font-face'(node) {\n            return '@font-face' + '{' + visit(node.declarations) + '}';\n        },\n        host(node) {\n            return '@host' + '{' + visit(node.rules) + '}';\n        },\n        import(node) {\n            // FIXED\n            return '@import ' + node.name + ';';\n        },\n        keyframe(node) {\n            return node.values.join(',') + '{' + visit(node.declarations) + '}';\n        },\n        keyframes(node) {\n            return '@' + (node.vendor || '') + 'keyframes ' + node.name + '{' + visit(node.keyframes) + '}';\n        },\n        media(node) {\n            return '@media ' + node.media + '{' + visit(node.rules) + '}';\n        },\n        namespace(node) {\n            return '@namespace ' + node.name + ';';\n        },\n        page(node) {\n            return '@page ' + (node.selectors.length ? node.selectors.join(', ') : '') + '{' + visit(node.declarations) + '}';\n        },\n        rule(node) {\n            const decls = node.declarations;\n\n            if (decls.length) {\n                return node.selectors.join(',') + '{' + visit(decls) + '}';\n            }\n        },\n        supports(node) {\n            // FIXED\n            return '@supports ' + node.supports + '{' + visit(node.rules) + '}';\n        }\n    };\n\n    function visit(nodes) {\n        let buf = '';\n\n        for (let i = 0; i < nodes.length; i++) {\n            const n = nodes[i];\n\n            if (cb) {\n                cb(n);\n            }\n\n            const txt = renderMethods[n.type](n);\n\n            if (txt) {\n                buf += txt;\n\n                if (txt.length && n.selectors) {\n                    buf += delim;\n                }\n            }\n        }\n\n        return buf;\n    }\n\n    return visit(tree.stylesheet.rules);\n}\n\n\n// Exports\n// =============================================================================\nexport default stringifyCss;\n","/**\n * Based on rework-visit by reworkcss\n * https://github.com/reworkcss/rework-visit\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Visit `node` declarations recursively and invoke `fn(declarations, node)`.\n *\n * @param {object} node\n * @param {function} fn\n */\nfunction walkCss(node, fn){\n    node.rules.forEach(function(rule){\n        // @media etc\n        if (rule.rules) {\n            walkCss(rule, fn);\n\n            return;\n        }\n\n        // keyframes\n        if (rule.keyframes) {\n            rule.keyframes.forEach(function(keyframe){\n                if (keyframe.type === 'keyframe') {\n                    fn(keyframe.declarations, rule);\n                }\n            });\n\n            return;\n        }\n\n        // @charset, @import etc\n        if (!rule.declarations) {\n            return;\n        }\n\n        fn(rule.declarations, node);\n    });\n}\n\n\n// Exports\n// =============================================================================\nexport default walkCss;\n","/**\n * Based on rework-vars by reworkcss\n * https://github.com/reworkcss/rework-vars\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced     from 'balanced-match';\nimport parseCss     from './parse-css';\nimport stringifyCss from './stringify-css';\nimport walkCss      from './walk-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst VAR_PROP_IDENTIFIER = '--';\nconst VAR_FUNC_IDENTIFIER = 'var';\nconst variableStore       = {\n    // Persisted custom property values (matches modern browsers)\n    dom : {},\n    // Non-persisted custom properties values\n    temp: {},\n    // Persisted custom property values passed using options.variables\n    user: {}\n};\n\n\n// Functions\n// =============================================================================\n/**\n * Transforms W3C-style CSS variables to static values and returns an updated\n * CSS string.\n *\n * @param {object}   cssText CSS containing variable definitions and functions\n * @param {object}   [options] Options object\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyVars=false] Remove declarations that do not\n *                   contain a CSS variable from the return value. Note that\n *                   @font-face and @keyframe rules require all declarations to\n *                   be returned if a CSS variable is used.\n * @param {boolean}  [options.persist=false] Persists options.variables,\n *                   allowing variables set in previous calls to be applied in\n *                   subsequent calls.\n * @param {boolean}  [options.preserve=false] Preserve CSS variable definitions\n *                   and functions in the return value, allowing \"live\" variable\n *                   updates via JavaScript to continue working in browsers with\n *                   native CSS variable support.\n * @param {object}   [options.variables={}] CSS variable definitions to include\n *                   during transformation. Can be used to add new override\n *                   exisitng definitions.\n * @param {function} [options.onWarning] Callback on each transformation\n *                   warning. Passes 1) warningMessage as an argument.\n * @returns {string}\n */\nfunction transformVars(cssText, options = {}) {\n    const defaults = {\n        fixNestedCalc: true,\n        onlyVars     : false,\n        persist      : false,\n        preserve     : false,\n        variables    : {},\n        onWarning() {}\n    };\n    const settings = Object.assign({}, defaults, options);\n    const map      = settings.persist ? variableStore.dom : variableStore.temp = JSON.parse(JSON.stringify(variableStore.dom));\n\n    // Convert cssText to AST (this could throw errors)\n    const cssTree = parseCss(cssText, {\n        onlyVars: settings.onlyVars\n    });\n\n    // Define variables\n    cssTree.stylesheet.rules.forEach(function(rule) {\n        const varNameIndices = [];\n\n        if (rule.type !== 'rule') {\n            return;\n        }\n\n        // only variables declared for `:root` are supported\n        if (rule.selectors.length !== 1 || rule.selectors[0] !== ':root') {\n            return;\n        }\n\n        rule.declarations.forEach(function(decl, i) {\n            const prop = decl.property;\n            const value = decl.value;\n\n            if (prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                map[prop] = value;\n                varNameIndices.push(i);\n            }\n        });\n\n        // optionally remove `--*` properties from the rule\n        if (!settings.preserve) {\n            for (let i = varNameIndices.length - 1; i >= 0; i--) {\n                rule.declarations.splice(varNameIndices[i], 1);\n            }\n        }\n    });\n\n    // Restore persisted user values\n    Object.keys(variableStore.user).forEach(key => {\n        map[key] = variableStore.user[key];\n    });\n\n    // Handle variables defined in settings.variables\n    if (Object.keys(settings.variables).length) {\n        const newRule = {\n            declarations: [],\n            selectors   : [':root'],\n            type        : 'rule'\n        };\n\n        Object.keys(settings.variables).forEach(key => {\n            // Convert all property names to leading '--' style\n            const prop  = `--${key.replace(/^-+/, '')}`;\n            const value = settings.variables[key];\n\n            // Persist settings.variables values\n            if (settings.persist) {\n                variableStore.user[prop] = value;\n            }\n\n            // Update map value with settings.variables value\n            if (map[prop] !== value) {\n                map[prop] = value;\n\n                // Add new declaration to newRule\n                newRule.declarations.push({\n                    type    : 'declaration',\n                    property: prop,\n                    value   : value\n                });\n            }\n        });\n\n        // Append new :root ruleset\n        if (settings.preserve && newRule.declarations.length) {\n            cssTree.stylesheet.rules.push(newRule);\n        }\n    }\n\n    // Resolve variables\n    walkCss(cssTree.stylesheet, function(declarations, node) {\n        let decl;\n        let resolvedValue;\n        let value;\n\n        for (let i = 0; i < declarations.length; i++) {\n            decl = declarations[i];\n            value = decl.value;\n\n            // skip comments\n            if (decl.type !== 'declaration') {\n                continue;\n            }\n\n            // skip values that don't contain variable functions\n            if (!value || value.indexOf(VAR_FUNC_IDENTIFIER + '(') === -1) {\n                continue;\n            }\n\n            resolvedValue = resolveValue(value, map, settings);\n\n            if (resolvedValue !== decl.value) {\n                if (!settings.preserve) {\n                    decl.value = resolvedValue;\n                }\n                else {\n                    declarations.splice(i, 0, {\n                        type    : decl.type,\n                        property: decl.property,\n                        value   : resolvedValue\n                    });\n\n                    // skip ahead of preserved declaration\n                    i++;\n                }\n            }\n        }\n    });\n\n    // Fix nested calc() values\n    if (settings.fixNestedCalc) {\n        fixNestedCalc(cssTree.stylesheet.rules);\n    }\n\n    // Return CSS string\n    return stringifyCss(cssTree);\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Removes nested calc keywords for legacy browser compatibility.\n * Example: calc(1 + calc(2 + calc(3 + 3))) => calc(1 + (2 + (3 + 3)))\n *\n * @param {array} rules\n */\nfunction fixNestedCalc(rules) {\n    const reCalcExp = /(-[a-z]+-)?calc\\(/; // Match \"calc(\" or \"-vendor-calc(\"\n\n    rules.forEach(rule => {\n        if (rule.declarations) {\n            rule.declarations.forEach(decl => {\n                let oldValue = decl.value;\n                let newValue = '';\n\n                while (reCalcExp.test(oldValue)) {\n                    const rootCalc = balanced('calc(', ')', oldValue || '');\n\n                    oldValue = oldValue.slice(rootCalc.end);\n\n                    while (reCalcExp.test(rootCalc.body)) {\n                        const nestedCalc = balanced(reCalcExp, ')', rootCalc.body);\n\n                        rootCalc.body = `${nestedCalc.pre}(${nestedCalc.body})${nestedCalc.post}`;\n                    }\n\n                    newValue += `${rootCalc.pre}calc(${rootCalc.body}`;\n                    newValue += !reCalcExp.test(oldValue) ? `)${rootCalc.post}` : '';\n                }\n\n                decl.value = newValue || decl.value;\n            });\n        }\n    });\n}\n\n/**\n * Resolves CSS var() function(s) with `map` data or fallback value(s). Returns\n * original `value` if unable to resolve.\n *\n * @param {string} value String containing CSS var() functions to resolve\n * @param {object} map CSS custom property key/values\n * @param {object} settings Settings object passed from transformVars()\n * @param {string} [__recursiveFallback] Fallback when unable to resolve CSS\n *                 var() function to a map or fallback value. Allows restoring\n *                 original var() function from recursive resolveValue() calls.\n * @return {string} CSS value with var() function(s) resolved to map or fallback\n *                  value.\n *\n * @example\n *\n *   resolveValue('10px var(--x) 30px', {'--x':'20px'}, {...settings});\n *   // => '10px 20px 30px'\n *\n *   resolveValue('10px', {}, {...settings});\n *   // => '10px'\n */\nfunction resolveValue(value, map, settings = {}, __recursiveFallback) {\n    if (value.indexOf('var(') === -1) {\n        return value;\n    }\n\n    const valueData    = balanced('(', ')', value);\n    const warningIntro = 'CSS transform warning:';\n\n    /**\n     * Resolves contents of CSS custom property function\n     *\n     * @param {string} value String containing contents of CSS var() function\n     * @returns {string}\n     *\n     * @example\n     *\n     *   resolveFunc('--x, var(--y, green)')\n     *   // => map['--x'] or map['--y'] or 'green'\n     *\n     *   resolveFunc('--fail')\n     *   // => 'var(--fail)' when map['--fail'] does not exist\n     */\n    function resolveFunc(value) {\n        const name               = value.split(',')[0].replace(/[\\s\\n\\t]/g, '');\n        const fallback           = (value.match(/(?:\\s*,\\s*){1}(.*)?/) || [])[1];\n        const match              = map.hasOwnProperty(name) ? String(map[name]) : undefined;\n        const replacement        = match || (fallback ? String(fallback) : undefined);\n        const unresolvedFallback = __recursiveFallback || value;\n\n        if (!match) {\n            settings.onWarning(`${warningIntro} variable \"${name}\" is undefined`);\n        }\n\n        if (replacement && replacement !== 'undefined' && replacement.length > 0) {\n            return resolveValue(replacement, map, settings, unresolvedFallback);\n        }\n        else {\n            return `var(${unresolvedFallback})`;\n        }\n    }\n\n    // No balanced brace data\n    if (!valueData) {\n        if (value.indexOf('var(') !== -1) {\n            settings.onWarning(`${warningIntro} missing closing \")\" in the value \"${value}\"`);\n        }\n\n        return value;\n    }\n    // Balanced brace data is var() function\n    else if (valueData.pre.slice(-3) === 'var') {\n        const isEmptyVarFunc = valueData.body.trim().length === 0;\n\n        if (isEmptyVarFunc) {\n            settings.onWarning(`${warningIntro} var() must contain a non-whitespace string`);\n\n            return value;\n        }\n        else {\n            return (\n                valueData.pre.slice(0,-3)\n                + resolveFunc(valueData.body)\n                + resolveValue(valueData.post, map, settings)\n            );\n        }\n    }\n    // Balanced brace data is NOT var() function\n    else {\n        return (\n            valueData.pre\n            + `(${resolveValue(valueData.body, map, settings)})`\n            + resolveValue(valueData.post, map, settings)\n        );\n    }\n}\n\n\n// Exports\n// =============================================================================\nexport default transformVars;\nexport { variableStore };","// Dependencies\n// =============================================================================\nimport getCssData          from 'get-css-data';\nimport transformCss        from './transform-css';\nimport { variableStore }   from './transform-css';\nimport { name as pkgName } from '../package.json';\n\n\n// Constants & Variables\n// =============================================================================\nconst isBrowser       = typeof window !== 'undefined';\nconst isNativeSupport = isBrowser && window.CSS && window.CSS.supports && window.CSS.supports('(--a: 0)');\n\nconst defaults = {\n    // Sources\n    rootElement  : isBrowser ? document : null,\n    include      : 'style,link[rel=stylesheet]',\n    exclude      : '',\n    // Options\n    fixNestedCalc: true,  // transformCss\n    onlyLegacy   : true,  // cssVars\n    onlyVars     : false, // cssVars, parseCSS\n    preserve     : false, // transformCss\n    shadowDOM    : false, // cssVars\n    silent       : false, // cssVars\n    updateDOM    : true,  // cssVars\n    updateURLs   : true,  // cssVars\n    variables    : {},    // transformCss\n    watch        : null,  // cssVars\n    // Callbacks\n    onBeforeSend() {},    // cssVars\n    onSuccess() {},       // cssVars\n    onWarning() {},       // transformCss\n    onError() {},         // cssVars\n    onComplete() {}       // cssVars\n};\nconst regex = {\n    // CSS comments\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    // CSS keyframes (@keyframes & @-VENDOR-keyframes)\n    cssKeyframes: /@(?:-\\w*-)?keyframes/,\n    // CSS root vars\n    cssRootRules: /(?::root\\s*{\\s*[^}]*})/g,\n    // CSS url(...) values\n    cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n    // CSS variable :root declarations and var() function values\n    cssVars: /(?:(?::root\\s*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\n\n// Mutation observer referece created via options.watch\nlet cssVarsObserver  = null;\n\n// Indicates if document-level custom property values have been parsed, stored,\n// and ready for use with options.shadowDOM\nlet isShadowDOMReady = false;\n\n\n// Functions\n// =============================================================================\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {object}   [options.rootElement=document] Root element to traverse for\n *                   <link> and <style> nodes.\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.onlyVars=false] Determines if CSS rulesets and\n *                   declarations without a custom property value should be\n *                   removed from the ponyfill-generated CSS\n * @param {boolean}  [options.preserve=false] Determines if the original CSS\n *                   custom property declaration will be retained in the\n *                   ponyfill-generated CSS.\n * @param {boolean}  [options.shadowDOM=false] Determines if shadow DOM <link>\n *                   and <style> nodes will be processed.\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n *                   convert relative url() paths to absolute urls.\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values.\n * @param {boolean}  [options.watch=false] Determines if a MutationObserver will\n *                   be created that will execute the ponyfill when a <link> or\n *                   <style> DOM mutation is observed.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, 2) a reference to\n *                   the appended <style> node, and 3) an object containing all\n *                   custom properies names and values.\n *\n * @example\n *\n *   cssVars({\n *     rootElement  : document,\n *     include      : 'style,link[rel=\"stylesheet\"]',\n *     exclude      : '',\n *     fixNestedCalc: true,\n *     onlyLegacy   : true,\n *     onlyVars     : false,\n *     preserve     : false,\n *     shadowDOM    : false,\n *     silent       : false,\n *     updateDOM    : true,\n *     updateURLs   : true,\n *     variables    : {\n *       // ...\n *     },\n *     watch        : false,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     },\n *     onWarning(message) {\n *       // ...\n *     },\n *     onError(message, node) {\n *       // ...\n *     },\n *     onComplete(cssText, styleNode) {\n *       // ...\n *     }\n *   });\n */\nfunction cssVars(options = {}) {\n    const settings    = Object.assign({}, defaults, options);\n    const styleNodeId = pkgName;\n\n    // Always exclude styleNodeId element, which is the generated <style> node\n    // containing previously transformed CSS.\n    settings.exclude = `#${styleNodeId}` + (settings.exclude ? `,${settings.exclude}` : '');\n\n    function handleError(message, sourceNode, xhr, url) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.error(`${message}\\n`, sourceNode);\n        }\n\n        settings.onError(message, sourceNode, xhr, url);\n    }\n\n    function handleWarning(message) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.warn(message);\n        }\n\n        settings.onWarning(message);\n    }\n\n    // Exit if non-browser environment (e.g. Node)\n    if (!isBrowser) {\n        return;\n    }\n\n    // Verify readyState to ensure all <link> and <style> nodes are available\n    if (document.readyState !== 'loading') {\n        const isShadowElm = settings.shadowDOM || settings.rootElement.shadowRoot || settings.rootElement.host;\n\n        // Native support\n        if (isNativeSupport && settings.onlyLegacy) {\n            // Apply settings.variables\n            if (settings.updateDOM) {\n                const targetElm = settings.rootElement.host || (settings.rootElement === document ? document.documentElement : settings.rootElement);\n\n                // Set variables using native methods\n                Object.keys(settings.variables).forEach(key => {\n                    // Convert all property names to leading '--' style\n                    const prop  = `--${key.replace(/^-+/, '')}`;\n                    const value = settings.variables[key];\n\n                    targetElm.style.setProperty(prop, value);\n                });\n            }\n        }\n        // Ponyfill: Handle rootElement set to a shadow host or root\n        else if (isShadowElm && !isShadowDOMReady) {\n            // Get all document-level CSS\n            getCssData({\n                rootElement: defaults.rootElement,\n                include: defaults.include,\n                exclude: settings.exclude,\n                onSuccess(cssText, node, url) {\n                    const cssRootDecls = (cssText.match(regex.cssRootRules) || []).join('');\n\n                    // Return only matching :root {...} blocks\n                    return cssRootDecls || false;\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    // Transform CSS, which stores custom property values from\n                    // cssText in variableStore. This step ensures that\n                    // variableStore contains all document-level custom property\n                    // values for subsequent ponyfill calls.\n                    transformCss(cssText, {\n                        persist: true\n                    });\n\n                    isShadowDOMReady = true;\n\n                    // Call the ponyfill again to process the rootElement\n                    // initially specified. Values stored in variableStore will\n                    // be used to transform values in shadow host/root elements.\n                    cssVars(settings);\n                }\n            });\n        }\n        // Ponyfill: Process CSS\n        else {\n            // Add / recreate MutationObserver\n            if (settings.watch) {\n                addMutationObserver(settings, styleNodeId);\n            }\n            // Disconnect existing\n            else if (settings.watch === false && cssVarsObserver) {\n                cssVarsObserver.disconnect();\n            }\n\n            getCssData({\n                rootElement: settings.rootElement,\n                include: settings.include,\n                exclude: settings.exclude,\n                // This filter does a test on each block of CSS. An additional\n                // filter is used in the parser to remove individual\n                // declarations.\n                filter: settings.onlyVars ? regex.cssVars : null,\n                onBeforeSend: settings.onBeforeSend,\n                onSuccess(cssText, node, url) {\n                    const returnVal = settings.onSuccess(cssText, node, url);\n\n                    cssText = returnVal !== undefined && Boolean(returnVal) === false ? '' : returnVal || cssText;\n\n                    // Convert relative url(...) values to absolute\n                    if (settings.updateURLs) {\n                        const cssUrls = cssText\n                            // Remove comments to avoid processing @import in comments\n                            .replace(regex.cssComments, '')\n                            // Match url(...) values\n                            .match(regex.cssUrls) || [];\n\n                        cssUrls.forEach(cssUrl => {\n                            const oldUrl = cssUrl.replace(regex.cssUrls, '$1');\n                            const newUrl = getFullUrl(oldUrl, url);\n\n                            cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n                        });\n                    }\n\n                    return cssText;\n                },\n                onError(xhr, node, url) {\n                    const responseUrl = xhr.responseURL || getFullUrl(url, location.href);\n                    const statusText  = xhr.statusText ? `(${xhr.statusText})` : 'Unspecified Error' + (xhr.status === 0 ? ' (possibly CORS related)' : '');\n                    const errorMsg    = `CSS XHR Error: ${responseUrl} ${xhr.status} ${statusText}`;\n\n                    handleError(errorMsg, node, xhr, responseUrl);\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    const cssMarker = /\\/\\*__CSSVARSPONYFILL-(\\d+)__\\*\\//g;\n                    let   styleNode = null;\n\n                    // Concatenate cssArray items, replacing those that do not\n                    // contain a CSS custom property declaraion or function with\n                    // a temporary marker . After the CSS is transformed, the\n                    // markers will be replaced with the matching cssArray item.\n                    // This optimization is done to avoid processing CSS that\n                    // will not change as a results of the ponyfill.\n                    cssText = cssArray.map((css, i) => regex.cssVars.test(css) ? css : `/*__CSSVARSPONYFILL-${i}__*/`).join('');\n\n                    try {\n                        cssText = transformCss(cssText, {\n                            fixNestedCalc: settings.fixNestedCalc,\n                            onlyVars     : settings.onlyVars,\n                            persist      : settings.updateDOM,\n                            preserve     : settings.preserve,\n                            variables    : settings.variables,\n                            onWarning    : handleWarning\n                        });\n\n                        const hasKeyframes = regex.cssKeyframes.test(cssText);\n\n                        // Replace markers with appropriate cssArray item\n                        cssText = cssText.replace(cssMarker, (match, group1) => cssArray[group1]);\n\n                        if (settings.updateDOM && nodeArray && nodeArray.length) {\n                            const lastNode = nodeArray[nodeArray.length - 1];\n\n                            styleNode = settings.rootElement.querySelector(`#${styleNodeId}`) || document.createElement('style');\n                            styleNode.setAttribute('id', styleNodeId);\n\n                            if (styleNode.textContent !== cssText) {\n                                styleNode.textContent = cssText;\n                            }\n\n                            // Insert <style> element after last nodeArray item\n                            if (lastNode.nextSibling !== styleNode && lastNode.parentNode) {\n                                lastNode.parentNode.insertBefore(styleNode, lastNode.nextSibling);\n                            }\n\n                            if (hasKeyframes) {\n                                fixKeyframes(settings.rootElement);\n                            }\n                        }\n                    }\n                    catch(err) {\n                        let errorThrown = false;\n\n                        // Iterate cssArray to detect CSS text and node(s)\n                        // responsibile for error.\n                        cssArray.forEach((cssText, i) => {\n                            try {\n                                cssText = transformCss(cssText, settings);\n                            }\n                            catch(err) {\n                                const errorNode = nodeArray[i - 0];\n\n                                errorThrown = true;\n                                handleError(err.message, errorNode);\n                            }\n                        });\n\n                        // In the event the error thrown was not due to\n                        // transformCss, handle the original error.\n                        /* istanbul ignore next */\n                        if (!errorThrown) {\n                            handleError(err.message || err);\n                        }\n                    }\n\n                    // Process shadow DOM\n                    if (settings.shadowDOM) {\n                        const elms = [\n                            settings.rootElement,\n                            ...settings.rootElement.querySelectorAll('*')\n                        ];\n\n                        // Iterates over all elements in rootElement and calls\n                        // cssVars on each shadowRoot, passing document-level\n                        // custom properties as options.variables.\n                        for (let i = 0, elm; (elm = elms[i]); ++i) {\n                            if (elm.shadowRoot && elm.shadowRoot.querySelector('style')) {\n                                const shadowSettings = Object.assign({}, settings, {\n                                    rootElement: elm.shadowRoot,\n                                    variables  : variableStore.dom\n                                });\n\n                                cssVars(shadowSettings);\n                            }\n                        }\n                    }\n\n                    settings.onComplete(cssText, styleNode, JSON.parse(JSON.stringify(settings.updateDOM ? variableStore.dom : variableStore.temp)));\n                }\n            });\n        }\n\n    }\n    // Delay function until DOMContentLoaded event is fired\n    /* istanbul ignore next */\n    else {\n        document.addEventListener('DOMContentLoaded', function init(evt) {\n            cssVars(options);\n\n            document.removeEventListener('DOMContentLoaded', init);\n        });\n    }\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Creates mutation observer that executes the ponyfill when a <link> or <style>\n * DOM mutation is observed.\n *\n * @param {object} settings\n * @param {string} ignoreId\n */\nfunction addMutationObserver(settings, ignoreId) {\n    if (!window.MutationObserver) {\n        return;\n    }\n\n    const isLink  = node => node.tagName === 'LINK' && (node.getAttribute('rel') || '').indexOf('stylesheet') !== -1;\n    const isStyle = node => node.tagName === 'STYLE' && (ignoreId ? node.id !== ignoreId : true);\n\n    let debounceTimer = null;\n\n    if (cssVarsObserver) {\n        cssVarsObserver.disconnect();\n    }\n\n    settings.watch = defaults.watch;\n\n    cssVarsObserver = new MutationObserver(function(mutations) {\n        let isUpdateMutation = false;\n\n        mutations.forEach(mutation => {\n            if (mutation.type === 'attributes') {\n                isUpdateMutation = isLink(mutation.target) || isStyle(mutation.target);\n            }\n            else if (mutation.type === 'childList') {\n                const addedNodes   = Array.apply(null, mutation.addedNodes);\n                const removedNodes = Array.apply(null, mutation.removedNodes);\n\n                isUpdateMutation = [].concat(addedNodes, removedNodes).some(node => {\n                    const isValidLink  = isLink(node) && !node.disabled;\n                    const isValidStyle = isStyle(node) && !node.disabled && regex.cssVars.test(node.textContent);\n\n                    return (isValidLink || isValidStyle);\n                });\n            }\n\n            if (isUpdateMutation) {\n                clearTimeout(debounceTimer);\n\n                debounceTimer = setTimeout(function() {\n                    cssVars(settings);\n                }, 1);\n            }\n        });\n    });\n\n    cssVarsObserver.observe(document.documentElement, {\n        attributes     : true,\n        attributeFilter: ['disabled', 'href'],\n        childList      : true,\n        subtree        : true\n    });\n}\n\n/**\n * Fixes issue with keyframe properties set using CSS custom property not being\n * applied properly in some legacy (IE) and modern (Safari) browsers.\n *\n * @param {object} rootElement\n */\nfunction fixKeyframes(rootElement) {\n    const animationNameProp = [\n        'animation-name',\n        '-moz-animation-name',\n        '-webkit-animation-name'\n    ].filter(prop => getComputedStyle(document.body)[prop])[0];\n\n    if (animationNameProp) {\n        const allNodes      = rootElement.getElementsByTagName('*');\n        const keyframeNodes = [];\n        const nameMarker    = '__CSSVARSPONYFILL-KEYFRAMES__';\n\n        // Modify animation name\n        for (let i = 0, len = allNodes.length; i < len; i++) {\n            const node          = allNodes[i];\n            const animationName = getComputedStyle(node)[animationNameProp];\n\n            if (animationName !== 'none') {\n                node.style[animationNameProp] += nameMarker;\n                keyframeNodes.push(node);\n            }\n        }\n\n        // Force reflow\n        void document.body.offsetHeight;\n\n        // Restore animation name\n        for (let i = 0, len = keyframeNodes.length; i < len; i++) {\n            const nodeStyle = keyframeNodes[i].style;\n\n            nodeStyle[animationNameProp] = nodeStyle[animationNameProp].replace(nameMarker, '');\n        }\n    }\n}\n\n/**\n * Returns fully qualified URL from relative URL and (optional) base URL\n *\n * @param   {string} url\n * @param   {string} [base=location.href]\n * @returns {string}\n */\nfunction getFullUrl(url, base = location.href) {\n    const d = document.implementation.createHTMLDocument('');\n    const b = d.createElement('base');\n    const a = d.createElement('a');\n\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n\n    return a.href;\n}\n\n\n// Export\n// =============================================================================\nexport default cssVars;\n"]}