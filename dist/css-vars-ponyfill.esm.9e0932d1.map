{"version":3,"sources":["../node_modules/get-css-data/dist/get-css-data.esm.js","../src/merge-deep.js","../node_modules/balanced-match/index.js","../src/parse-css.js","../src/stringify-css.js","../src/walk-css.js","../src/transform-css.js","../src/index.js"],"names":["getUrls","urls","options","arguments","length","undefined","settings","mimeType","onBeforeSend","Function","prototype","onSuccess","onError","onComplete","urlArray","Array","isArray","urlQueue","apply","map","x","xhr","urlIndex","responseText","returnVal","indexOf","forEach","url","i","parser","document","createElement","setAttribute","href","isCrossDomain","host","location","isSameProtocol","protocol","XDomainRequest","xdr","open","timeout","onprogress","ontimeout","onload","onerror","err","setTimeout","send","console","log","XMLHttpRequest","overrideMimeType","onreadystatechange","readyState","status","getCssData","regex","cssComments","cssImports","include","exclude","filter","sourceNodes","querySelectorAll","node","matchesSelector","cssArray","handleComplete","isComplete","cssText","join","handleSuccess","cssIndex","sourceUrl","resolveImports","resolvedCssText","errorData","data","test","parseImportData","baseUrl","ignoreRules","importData","rules","replace","match","rule","absoluteUrls","getFullUrl","absoluteRules","oldUrl","newUrl","callbackFn","__errorData","__errorRules","responseImportData","push","responseArray","importText","linkHref","getAttribute","linkRel","isLink","nodeName","toLowerCase","isStyle","textContent","base","d","implementation","createHTMLDocument","b","a","head","appendChild","body","elm","selector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","call","mergeDeep","isObject","obj","Object","constructor","objects","reduce","prev","keys","pVal","key","oVal","balanced","str","RegExp","maybeMatch","r","range","start","end","pre","slice","post","reg","m","begs","beg","left","right","result","ai","bi","pop","cssParse","css","errors","error","msg","Error","re","exec","whitespace","close","comment","type","comments","cmnts","c","trim","split","s","declaration","comment_regexp","prop","val","ret","property","value","declarations","decls","concat","keyframe","vals","values","at_keyframes","vendor","name","frame","frames","keyframes","at_page","sel","selectors","at_fontface","at_supports","supports","at_host","at_media","media","at_custom_m","at_document","at_x","at_rule","core","stylesheet","stringifyCss","tree","delim","cb","renderMethods","visit","nodes","buf","n","txt","walkCss","fn","persistStore","VAR_PROP_IDENTIFIER","VAR_FUNC_IDENTIFIER","transformVars","defaults","varSource","persist","variables","cssTree","parseCss","onlyVars","filterVars","varNameIndices","decl","preserve","splice","newRule","resolvedValue","resolveValue","fixNestedCalc","declArray","hasVarProp","hasVarVal","Boolean","k","reCalcExp","oldValue","newValue","rootCalc","nestedCalc","RE_VAR","balancedParens","varStartIndex","varRef","substring","warningIntro","onWarning","varFunc","varResult","_","fallback","replacement","cssVars","handleError","message","sourceNode","silent","handleWarning","warn","hasNativeSupport","window","CSS","onlyLegacy","styleNodeId","pkgName","updateURLs","cssUrls","cssUrl","responseUrl","responseURL","statusText","errorMsg","nodeArray","cssMarker","styleNode","transformCss","updateDOM","cssMarkerMatch","matchedText","cssArrayIndex","lastNode","querySelector","nextSibling","parentNode","insertBefore","errorThrown","errorNode","documentElement","style","setProperty","addEventListener","init","evt","removeEventListener"],"mappings":"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","file":"css-vars-ponyfill.esm.9e0932d1.map","sourceRoot":"..","sourcesContent":["/*!\n * get-css-data\n * v1.3.2\n * https://github.com/jhildenbiddle/get-css-data\n * (c) 2018 John Hildenbiddle <http://hildenbiddle.com>\n * MIT license\n */\nfunction getUrls(urls) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var settings = {\n        mimeType: options.mimeType || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var urlArray = Array.isArray(urls) ? urls : [ urls ];\n    var urlQueue = Array.apply(null, Array(urlArray.length)).map(function(x) {\n        return null;\n    });\n    function onError(xhr, urlIndex) {\n        settings.onError(xhr, urlArray[urlIndex], urlIndex);\n    }\n    function onSuccess(responseText, urlIndex) {\n        var returnVal = settings.onSuccess(responseText, urlArray[urlIndex], urlIndex);\n        responseText = returnVal === false ? \"\" : returnVal || responseText;\n        urlQueue[urlIndex] = responseText;\n        if (urlQueue.indexOf(null) === -1) {\n            settings.onComplete(urlQueue);\n        }\n    }\n    urlArray.forEach(function(url, i) {\n        var parser = document.createElement(\"a\");\n        parser.setAttribute(\"href\", url);\n        parser.href = parser.href;\n        var isCrossDomain = parser.host !== location.host;\n        var isSameProtocol = parser.protocol === location.protocol;\n        if (isCrossDomain && typeof XDomainRequest !== \"undefined\") {\n            if (isSameProtocol) {\n                var xdr = new XDomainRequest();\n                xdr.open(\"GET\", url);\n                xdr.timeout = 0;\n                xdr.onprogress = Function.prototype;\n                xdr.ontimeout = Function.prototype;\n                xdr.onload = function() {\n                    onSuccess(xdr.responseText, i);\n                };\n                xdr.onerror = function(err) {\n                    onError(xdr, i);\n                };\n                setTimeout(function() {\n                    xdr.send();\n                }, 0);\n            } else {\n                console.log(\"Internet Explorer 9 Cross-Origin (CORS) requests must use the same protocol\");\n                onError(null, i);\n            }\n        } else {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            if (settings.mimeType && xhr.overrideMimeType) {\n                xhr.overrideMimeType(settings.mimeType);\n            }\n            settings.onBeforeSend(xhr, url, i);\n            xhr.onreadystatechange = function() {\n                if (xhr.readyState === 4) {\n                    if (xhr.status === 200) {\n                        onSuccess(xhr.responseText, i);\n                    } else {\n                        onError(xhr, i);\n                    }\n                }\n            };\n            xhr.send();\n        }\n    });\n}\n\n/**\n * Gets CSS data from <style> and <link> nodes (including @imports), then\n * returns data in order processed by DOM. Allows specifying nodes to\n * include/exclude and filtering CSS data using RegEx.\n *\n * @preserve\n * @param {object}   [options] The options object\n * @param {string}   [options.include] CSS selector matching <link> and <style>\n *                   nodes to include\n * @param {string}   [options.exclude] CSS selector matching <link> and <style>\n *                   nodes to exclude\n * @param {object}   [options.filter] Regular expression used to filter node CSS\n *                   data. Each block of CSS data is tested against the filter,\n *                   and only matching data is included.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback on each CSS node read. Passes\n *                   1) CSS text, 2) source node reference, and 3) the source\n *                   URL as arguments.\n * @param {function} [options.onError] Callback on each error. Passes 1) the XHR\n *                   object for inspection, 2) soure node reference, and 3) the\n *                   source URL that failed (either a <link> href or an @import)\n *                   as arguments\n * @param {function} [options.onComplete] Callback after all nodes have been\n *                   processed. Passes 1) concatenated CSS text, 2) an array of\n *                   CSS text in DOM order, and 3) an array of nodes in DOM\n *                   order as arguments.\n *\n * @example\n *\n *   getCssData({\n *     include: 'style,link[rel=\"stylesheet\"]', // default\n *     exclude: '[href=\"skip.css\"]',\n *     filter : /red/,\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     }\n *     onError(xhr, node, url) {\n *       // ...\n *     },\n *     onComplete(cssText, cssArray) {\n *       // ...\n *     },\n *   });\n */ function getCssData(options) {\n    var regex = {\n        cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n        cssImports: /(?:@import\\s*)(?:url\\(\\s*)?(?:['\"])([^'\"]*)(?:['\"])(?:\\s*\\))?(?:[^;]*;)/g\n    };\n    var settings = {\n        include: options.include || 'style,link[rel=\"stylesheet\"]',\n        exclude: options.exclude || null,\n        filter: options.filter || null,\n        onBeforeSend: options.onBeforeSend || Function.prototype,\n        onSuccess: options.onSuccess || Function.prototype,\n        onError: options.onError || Function.prototype,\n        onComplete: options.onComplete || Function.prototype\n    };\n    var sourceNodes = Array.apply(null, document.querySelectorAll(settings.include)).filter(function(node) {\n        return !matchesSelector(node, settings.exclude);\n    });\n    var cssArray = Array.apply(null, Array(sourceNodes.length)).map(function(x) {\n        return null;\n    });\n    function handleComplete() {\n        var isComplete = cssArray.indexOf(null) === -1;\n        if (isComplete) {\n            var cssText = cssArray.join(\"\");\n            settings.onComplete(cssText, cssArray, sourceNodes);\n        }\n    }\n    function handleSuccess(cssText, cssIndex, node, sourceUrl) {\n        var returnVal = settings.onSuccess(cssText, node, sourceUrl);\n        cssText = returnVal === false ? \"\" : returnVal || cssText;\n        resolveImports(cssText, node, sourceUrl, function(resolvedCssText, errorData) {\n            if (cssArray[cssIndex] === null) {\n                errorData.forEach(function(data) {\n                    return settings.onError(data.xhr, node, data.url);\n                });\n                if (!settings.filter || settings.filter.test(resolvedCssText)) {\n                    cssArray[cssIndex] = resolvedCssText;\n                } else {\n                    cssArray[cssIndex] = \"\";\n                }\n                handleComplete();\n            }\n        });\n    }\n    function parseImportData(cssText, baseUrl) {\n        var ignoreRules = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n        var importData = {};\n        importData.rules = (cssText.replace(regex.cssComments, \"\").match(regex.cssImports) || []).filter(function(rule) {\n            return ignoreRules.indexOf(rule) === -1;\n        });\n        importData.urls = importData.rules.map(function(rule) {\n            return rule.replace(regex.cssImports, \"$1\");\n        });\n        importData.absoluteUrls = importData.urls.map(function(url) {\n            return getFullUrl(url, baseUrl);\n        });\n        importData.absoluteRules = importData.rules.map(function(rule, i) {\n            var oldUrl = importData.urls[i];\n            var newUrl = getFullUrl(importData.absoluteUrls[i], baseUrl);\n            return rule.replace(oldUrl, newUrl);\n        });\n        return importData;\n    }\n    function resolveImports(cssText, node, baseUrl, callbackFn) {\n        var __errorData = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n        var __errorRules = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : [];\n        var importData = parseImportData(cssText, baseUrl, __errorRules);\n        if (importData.rules.length) {\n            getUrls(importData.absoluteUrls, {\n                onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                    settings.onBeforeSend(xhr, node, url);\n                },\n                onSuccess: function onSuccess(cssText, url, urlIndex) {\n                    var returnVal = settings.onSuccess(cssText, node, url);\n                    cssText = returnVal === false ? \"\" : returnVal || cssText;\n                    var responseImportData = parseImportData(cssText, url, __errorRules);\n                    responseImportData.rules.forEach(function(rule, i) {\n                        cssText = cssText.replace(rule, responseImportData.absoluteRules[i]);\n                    });\n                    return cssText;\n                },\n                onError: function onError(xhr, url, urlIndex) {\n                    __errorData.push({\n                        xhr: xhr,\n                        url: url\n                    });\n                    __errorRules.push(importData.rules[urlIndex]);\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                },\n                onComplete: function onComplete(responseArray) {\n                    responseArray.forEach(function(importText, i) {\n                        cssText = cssText.replace(importData.rules[i], importText);\n                    });\n                    resolveImports(cssText, node, baseUrl, callbackFn, __errorData, __errorRules);\n                }\n            });\n        } else {\n            callbackFn(cssText, __errorData);\n        }\n    }\n    if (sourceNodes.length) {\n        sourceNodes.forEach(function(node, i) {\n            var linkHref = node.getAttribute(\"href\");\n            var linkRel = node.getAttribute(\"rel\");\n            var isLink = node.nodeName === \"LINK\" && linkHref && linkRel && linkRel.toLowerCase() === \"stylesheet\";\n            var isStyle = node.nodeName === \"STYLE\";\n            if (isLink) {\n                getUrls(linkHref, {\n                    mimeType: \"text/css\",\n                    onBeforeSend: function onBeforeSend(xhr, url, urlIndex) {\n                        settings.onBeforeSend(xhr, node, url);\n                    },\n                    onSuccess: function onSuccess(cssText, url, urlIndex) {\n                        var sourceUrl = getFullUrl(linkHref, location.href);\n                        handleSuccess(cssText, i, node, sourceUrl);\n                    },\n                    onError: function onError(xhr, url, urlIndex) {\n                        cssArray[i] = \"\";\n                        settings.onError(xhr, node, url);\n                        handleComplete();\n                    }\n                });\n            } else if (isStyle) {\n                handleSuccess(node.textContent, i, node, location.href);\n            } else {\n                cssArray[i] = \"\";\n                handleComplete();\n            }\n        });\n    } else {\n        settings.onComplete(\"\", []);\n    }\n}\n\nfunction getFullUrl(url) {\n    var base = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : location.href;\n    var d = document.implementation.createHTMLDocument(\"\");\n    var b = d.createElement(\"base\");\n    var a = d.createElement(\"a\");\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n    return a.href;\n}\n\nfunction matchesSelector(elm, selector) {\n    var matches = elm.matches || elm.matchesSelector || elm.webkitMatchesSelector || elm.mozMatchesSelector || elm.msMatchesSelector || elm.oMatchesSelector;\n    return matches.call(elm, selector);\n}\n\nexport default getCssData;\n//# sourceMappingURL=get-css-data.esm.js.map\n","// Functions\n// =============================================================================\n/**\n * Performs a deep merge of objects and returns new object. Does not modify\n * objects (immutable) and merges arrays via concatenation.\n *\n * @param {...object} objects - Objects to merge\n * @returns {object} New object with merged key/values\n */\nfunction mergeDeep(...objects) {\n    const isObject = obj => obj instanceof Object && obj.constructor === Object;\n\n    return objects.reduce((prev, obj) => {\n        Object.keys(obj).forEach(key => {\n            const pVal = prev[key];\n            const oVal = obj[key];\n\n            // if (Array.isArray(pVal) && Array.isArray(oVal)) {\n            //     prev[key] = pVal.concat(...oVal);\n            // }\n            if (isObject(pVal) && isObject(oVal)) {\n                prev[key] = mergeDeep(pVal, oVal);\n            }\n            else {\n                prev[key] = oVal;\n            }\n        });\n\n        return prev;\n    }, {});\n}\n\n\n// Export\n// =============================================================================\nexport default mergeDeep;\n","'use strict';\nmodule.exports = balanced;\nfunction balanced(a, b, str) {\n  if (a instanceof RegExp) a = maybeMatch(a, str);\n  if (b instanceof RegExp) b = maybeMatch(b, str);\n\n  var r = range(a, b, str);\n\n  return r && {\n    start: r[0],\n    end: r[1],\n    pre: str.slice(0, r[0]),\n    body: str.slice(r[0] + a.length, r[1]),\n    post: str.slice(r[1] + b.length)\n  };\n}\n\nfunction maybeMatch(reg, str) {\n  var m = str.match(reg);\n  return m ? m[0] : null;\n}\n\nbalanced.range = range;\nfunction range(a, b, str) {\n  var begs, beg, left, right, result;\n  var ai = str.indexOf(a);\n  var bi = str.indexOf(b, ai + 1);\n  var i = ai;\n\n  if (ai >= 0 && bi > 0) {\n    begs = [];\n    left = str.length;\n\n    while (i >= 0 && !result) {\n      if (i == ai) {\n        begs.push(i);\n        ai = str.indexOf(a, i + 1);\n      } else if (begs.length == 1) {\n        result = [ begs.pop(), bi ];\n      } else {\n        beg = begs.pop();\n        if (beg < left) {\n          left = beg;\n          right = bi;\n        }\n\n        bi = str.indexOf(b, i + 1);\n      }\n\n      i = ai < bi && ai >= 0 ? ai : bi;\n    }\n\n    if (begs.length) {\n      result = [ left, right ];\n    }\n  }\n\n  return result;\n}\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Parses CSS string and generates AST object\n *\n * @param {string} css The CSS stringt to be converted to an AST\n * @returns {object}\n */\nfunction cssParse(css) {\n    const errors = [];\n\n    // Errors\n    // -------------------------------------------------------------------------\n    function error(msg) {\n        throw new Error(`CSS parse error: ${msg}`);\n    }\n\n    // RegEx\n    // -------------------------------------------------------------------------\n    // Match regexp and return captures\n    function match(re) {\n        const m = re.exec(css);\n\n        if (m) {\n            css = css.slice(m[0].length);\n\n            return m;\n        }\n    }\n\n    function whitespace() {\n        match(/^\\s*/);\n    }\n    function open() {\n        return match(/^{\\s*/);\n    }\n    function close() {\n        return match(/^}/);\n    }\n\n    // Comments\n    // -------------------------------------------------------------------------\n    function comment() {\n        whitespace();\n\n        if (css[0] !== '/' || css[1] !== '*') { return; }\n\n        let i = 2;\n        while (css[i] && (css[i] !== '*' || css[i + 1] !== '/')) { i++; }\n\n        // FIXED\n        if (!css[i]) { return error('end of comment is missing'); }\n\n        const str = css.slice(2, i);\n        css = css.slice(i + 2);\n\n        return { type: 'comment', comment: str };\n    }\n    function comments() {\n        const cmnts = [];\n\n        let c;\n\n        while ((c = comment())) {\n            cmnts.push(c);\n        }\n        return cmnts;\n    }\n\n    // Selector\n    // -------------------------------------------------------------------------\n    function selector() {\n        whitespace();\n        while (css[0] === '}') {\n            error('extra closing bracket');\n        }\n\n        const m = match(/^((\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'|[^{])+)/);\n\n        if (m)\n        { return m[0]\n            .trim() // remove all comments from selectors\n            .replace(/\\/\\*([^*]|[\\r\\n]|(\\*+([^*/]|[\\r\\n])))*\\*\\/+/g, '')\n            .replace(/\"(?:\\\\\"|[^\"])*\"|'(?:\\\\'|[^'])*'/g, function(m) {\n                return m.replace(/,/g, '\\u200C');\n            })\n            .split(/\\s*(?![^(]*\\)),\\s*/)\n            .map(function(s) {\n                return s.replace(/\\u200C/g, ',');\n            }); }\n    }\n\n    // Declarations\n    // -------------------------------------------------------------------------\n    function declaration() {\n        match(/^([;\\s]*)+/); // ignore empty declarations + whitespace\n\n        const comment_regexp = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\n        let prop = match(/^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/);\n        if (!prop) { return; }\n\n        prop = prop[0].trim();\n\n        if (!match(/^:\\s*/)) { return error('property missing \\':\\''); }\n\n        // Quotes regex repeats verbatim inside and outside parentheses\n        const val = match(/^((?:\\/\\*.*?\\*\\/|'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\((\\s*'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|[^)]*?)\\s*\\)|[^};])+)/);\n\n        const ret = { type: 'declaration', property: prop.replace(comment_regexp, ''), value: val ? val[0].replace(comment_regexp, '').trim() : '' };\n\n        match(/^[;\\s]*/);\n\n        return ret;\n    }\n    function declarations() {\n        if (!open()) { return error('missing \\'{\\''); }\n\n        let d,\n            decls = comments();\n\n        while ((d = declaration())) {\n            decls.push(d);\n            decls = decls.concat(comments());\n        }\n\n        if (!close()) { return error('missing \\'}\\''); }\n\n        return decls;\n    }\n\n    // Keyframes\n    // -------------------------------------------------------------------------\n    function keyframe() {\n        whitespace();\n\n        const vals = [];\n\n        let m;\n\n        while ((m = match(/^((\\d+\\.\\d+|\\.\\d+|\\d+)%?|[a-z]+)\\s*/))) {\n            vals.push(m[1]);\n            match(/^,\\s*/);\n        }\n\n        if (vals.length) { return { type: 'keyframe', values: vals, declarations: declarations() }; }\n    }\n    function at_keyframes() {\n        let m = match(/^@([-\\w]+)?keyframes\\s*/);\n\n        if (!m) { return; }\n\n        const vendor = m[1];\n\n        m = match(/^([-\\w]+)\\s*/);\n        if (!m) { return error('@keyframes missing name'); } // identifier\n\n        const name = m[1];\n\n        if (!open()) { return error('@keyframes missing \\'{\\''); }\n\n        let frame,\n            frames = comments();\n        while ((frame = keyframe())) {\n            frames.push(frame);\n            frames = frames.concat(comments());\n        }\n\n        if (!close()) { return error('@keyframes missing \\'}\\''); }\n\n        return { type: 'keyframes', name: name, vendor: vendor, keyframes: frames };\n    }\n\n    // @ Rules\n    // -------------------------------------------------------------------------\n    function at_page() {\n        const m = match(/^@page */);\n        if (m) {\n            const sel = selector() || [];\n            return { type: 'page', selectors: sel, declarations: declarations() };\n        }\n    }\n    function at_fontface() {\n        const m = match(/^@font-face\\s*/);\n        if (m) { return { type: 'font-face', declarations: declarations() }; }\n    }\n    function at_supports() {\n        const m = match(/^@supports *([^{]+)/);\n        if (m) { return { type: 'supports', supports: m[1].trim(), rules: rules() }; }\n    }\n    function at_host() {\n        const m = match(/^@host\\s*/);\n        if (m) { return { type: 'host', rules: rules() }; }\n    }\n    function at_media() {\n        const m = match(/^@media *([^{]+)/);\n        if (m) { return { type: 'media', media: m[1].trim(), rules: rules() }; }\n    }\n    function at_custom_m() {\n        const m = match(/^@custom-media\\s+(--[^\\s]+)\\s*([^{;]+);/);\n        if (m) { return { type: 'custom-media', name: m[1].trim(), media: m[2].trim() }; }\n    }\n    function at_document() {\n        const m = match(/^@([-\\w]+)?document *([^{]+)/);\n        // FIXED\n        if (m) { return { type: 'document', document: m[2].trim(), vendor: m[1] ? m[1].trim() : null, rules: rules() }; }\n    }\n    function at_x() {\n        const m = match(/^@(import|charset|namespace)\\s*([^;]+);/);\n        if (m) { return { type: m[1], name: m[2].trim() }; }\n    }\n    function at_rule() {\n        whitespace();\n        if (css[0] === '@') { return at_keyframes() || at_supports() || at_host() || at_media() || at_custom_m() || at_page() || at_document() || at_fontface() || at_x(); }\n    }\n\n    // Rules\n    // -------------------------------------------------------------------------\n    function rule() {\n        const sel = selector() || [];\n        if (!sel.length) { error('selector missing'); }\n\n        const decls = declarations();\n\n        return { type: 'rule', selectors: sel, declarations: decls };\n    }\n    function rules(core) {\n        if (!core && !open()) { return error('missing \\'{\\''); }\n\n        let node,\n            rules = comments();\n\n        while (css.length && (core || css[0] !== '}') && (node = at_rule() || rule())) {\n            rules.push(node);\n            rules = rules.concat(comments());\n        }\n\n        if (!core && !close()) { return error('missing \\'}\\''); }\n\n        return rules;\n    }\n\n    return { type: 'stylesheet', stylesheet: { rules: rules(true), errors: errors } };\n}\n\n\n// Exports\n// =============================================================================\nexport default cssParse;\n","/**\n * Based on css parser/compiler by NxChg\n * https://github.com/NxtChg/pieces/tree/master/js/css_parser\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Compiles CSS AST to string\n *\n * @param {object}   tree CSS AST object\n * @param {string}   [delim=''] CSS rule delimiter\n * @param {function} cb Function to be called before each node is processed\n * @returns {string}\n */\nfunction stringifyCss(tree, delim = '', cb) {\n    const renderMethods = {\n        charset(node) {\n            return '@charset ' + node.name + ';';\n        },\n        comment(node) {\n            // Preserve ponyfill marker comments\n            return node.comment.indexOf('__CSSVARSPONYFILL') === 0 ? '/*' + node.comment + '*/' : '';\n        },\n        'custom-media'(node) {\n            return '@custom-media ' + node.name + ' ' + node.media + ';';\n        },\n        declaration(node) {\n            return node.property + ':' + node.value + ';';\n        },\n        document(node) {\n            return '@' + (node.vendor || '') + 'document ' + node.document + '{' + visit(node.rules) + '}';\n        },\n        'font-face'(node) {\n            return '@font-face' + '{' + visit(node.declarations) + '}';\n        },\n        host(node) {\n            return '@host' + '{' + visit(node.rules) + '}';\n        },\n        import(node) {\n            // FIXED\n            return '@import ' + node.name + ';';\n        },\n        keyframe(node) {\n            return node.values.join(',') + '{' + visit(node.declarations) + '}';\n        },\n        keyframes(node) {\n            return '@' + (node.vendor || '') + 'keyframes ' + node.name + '{' + visit(node.keyframes) + '}';\n        },\n        media(node) {\n            return '@media ' + node.media + '{' + visit(node.rules) + '}';\n        },\n        namespace(node) {\n            return '@namespace ' + node.name + ';';\n        },\n        page(node) {\n            return '@page ' + (node.selectors.length ? node.selectors.join(', ') : '') + '{' + visit(node.declarations) + '}';\n        },\n        rule(node) {\n            const decls = node.declarations;\n\n            if (decls.length) {\n                return node.selectors.join(',') + '{' + visit(decls) + '}';\n            }\n        },\n        supports(node) {\n            // FIXED\n            return '@supports ' + node.supports + '{' + visit(node.rules) + '}';\n        }\n    };\n\n    function visit(nodes) {\n        let buf = '';\n\n        for (let i = 0; i < nodes.length; i++) {\n            const n = nodes[i];\n\n            if (cb) {\n                cb(n);\n            }\n\n            const txt = renderMethods[n.type](n);\n\n            if (txt) {\n                buf += txt;\n\n                if (txt.length && n.selectors) {\n                    buf += delim;\n                }\n            }\n        }\n\n        return buf;\n    }\n\n    return visit(tree.stylesheet.rules);\n}\n\n\n// Exports\n// =============================================================================\nexport default stringifyCss;\n","/**\n * Based on rework-visit by reworkcss\n * https://github.com/reworkcss/rework-visit\n */\n\n\n// Functions\n// =============================================================================\n/**\n * Visit `node` declarations recursively and invoke `fn(declarations, node)`.\n *\n * @param {object} node\n * @param {function} fn\n */\nfunction walkCss(node, fn){\n    node.rules.forEach(function(rule){\n        // @media etc\n        if (rule.rules) {\n            walkCss(rule, fn);\n\n            return;\n        }\n\n        // keyframes\n        if (rule.keyframes) {\n            rule.keyframes.forEach(function(keyframe){\n                if (keyframe.type === 'keyframe') {\n                    fn(keyframe.declarations, rule);\n                }\n            });\n\n            return;\n        }\n\n        // @charset, @import etc\n        if (!rule.declarations) {\n            return;\n        }\n\n        fn(rule.declarations, node);\n    });\n}\n\n\n// Exports\n// =============================================================================\nexport default walkCss;\n","/**\n * Based on rework-vars by reworkcss\n * https://github.com/reworkcss/rework-vars\n */\n\n\n// Dependencies\n// =============================================================================\nimport balanced     from 'balanced-match';\nimport mergeDeep    from './merge-deep';\nimport parseCss     from './parse-css';\nimport stringifyCss from './stringify-css';\nimport walkCss      from './walk-css';\n\n\n// Constants & Variables\n// =============================================================================\nconst persistStore        = {};\nconst VAR_PROP_IDENTIFIER = '--';\nconst VAR_FUNC_IDENTIFIER = 'var';\n\n\n// Functions\n// =============================================================================\n/**\n * Transforms W3C-style CSS variables to static values and returns an updated\n * CSS string.\n *\n * @param {object}   cssText CSS containing variable definitions and functions\n * @param {object}   [options] Options object\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyVars=true] Remove declarations that do not\n *                   contain a CSS variable from the return value. Note that\n *                   @font-face and @keyframe rules require all declarations to\n *                   be returned if a CSS variable is used.\n * @param {boolean}  [options.persist=false] Persists options.variables,\n *                   allowing variables set in previous calls to be applied in\n *                   subsequent calls.\n * @param {boolean}  [options.preserve=false] Preserve CSS variable definitions\n *                   and functions in the return value, allowing \"live\" variable\n *                   updates via JavaScript to continue working in browsers with\n *                   native CSS variable support.\n * @param {object}   [options.variables={}] CSS variable definitions to include\n *                   during transformation. Can be used to add new override\n *                   exisitng definitions.\n * @param {function} [options.onWarning] Callback on each transformation\n *                   warning. Passes 1) warningMessage as an argument.\n * @returns {string}\n */\nfunction transformVars(cssText, options = {}) {\n    const defaults = {\n        fixNestedCalc: true,\n        onlyVars     : true,\n        persist      : false,\n        preserve     : false,\n        variables    : {},\n        onWarning() {}\n    };\n    const map       = {};\n    const settings  = mergeDeep(defaults, options);\n    const varSource = settings.persist ? persistStore : settings.variables;\n\n    // Convert cssText to AST (this could throw errors)\n    const cssTree = parseCss(cssText);\n\n    // Remove non-vars\n    if (settings.onlyVars) {\n        cssTree.stylesheet.rules = filterVars(cssTree.stylesheet.rules);\n    }\n\n    // Define variables\n    cssTree.stylesheet.rules.forEach(function(rule) {\n        const varNameIndices = [];\n\n        if (rule.type !== 'rule') {\n            return;\n        }\n\n        // only variables declared for `:root` are supported\n        if (rule.selectors.length !== 1 || rule.selectors[0] !== ':root') {\n            return;\n        }\n\n        rule.declarations.forEach(function(decl, i) {\n            const prop = decl.property;\n            const value = decl.value;\n\n            if (prop && prop.indexOf(VAR_PROP_IDENTIFIER) === 0) {\n                map[prop] = value;\n                varNameIndices.push(i);\n            }\n        });\n\n        // optionally remove `--*` properties from the rule\n        if (!settings.preserve) {\n            for (let i = varNameIndices.length - 1; i >= 0; i--) {\n                rule.declarations.splice(varNameIndices[i], 1);\n            }\n        }\n    });\n\n    // Handle variables defined in settings.variables\n    Object.keys(settings.variables).forEach(key => {\n        // Convert all property names to leading '--' style\n        const prop  = `--${key.replace(/^-+/, '')}`;\n        const value = settings.variables[key];\n\n        // Update settings.variables\n        if (key !== prop) {\n            settings.variables[prop] = value;\n            delete settings.variables[key];\n        }\n\n        // Store variables so they can be reapplied on subsequent call. For\n        // example, if '--myvar' is set on the first call it should continue to\n        // be set on each call thereafter (otherwise each call removes the\n        // previously set variables).\n        if (settings.persist) {\n            persistStore[prop] = value;\n        }\n    });\n\n    if (Object.keys(varSource).length) {\n        const newRule = {\n            declarations: [],\n            selectors   : [':root'],\n            type        : 'rule'\n        };\n\n        Object.keys(varSource).forEach(function(key) {\n            // Update internal map value with varSource value\n            map[key] = varSource[key];\n\n            // Add new declaration to newRule\n            newRule.declarations.push({\n                type    : 'declaration',\n                property: key,\n                value   : varSource[key]\n            });\n\n            // Add to persistent storage\n            if (settings.persist) {\n                persistStore[key] = varSource[key];\n            }\n        });\n\n        // Append new :root ruleset\n        if (settings.preserve) {\n            cssTree.stylesheet.rules.push(newRule);\n        }\n    }\n\n    // Resolve variables\n    walkCss(cssTree.stylesheet, function(declarations, node) {\n        let decl;\n        let resolvedValue;\n        let value;\n\n        for (let i = 0; i < declarations.length; i++) {\n            decl = declarations[i];\n            value = decl.value;\n\n            // skip comments\n            if (decl.type !== 'declaration') {\n                continue;\n            }\n\n            // skip values that don't contain variable functions\n            if (!value || value.indexOf(VAR_FUNC_IDENTIFIER + '(') === -1) {\n                continue;\n            }\n\n            resolvedValue = resolveValue(value, map, settings);\n\n            if (resolvedValue !== 'undefined') {\n                if (!settings.preserve) {\n                    decl.value = resolvedValue;\n                }\n                else {\n                    declarations.splice(i, 0, {\n                        type    : decl.type,\n                        property: decl.property,\n                        value   : resolvedValue\n                    });\n\n                    // skip ahead of preserved declaration\n                    i++;\n                }\n            }\n        }\n    });\n\n    // Fix nested calc() values\n    if (settings.fixNestedCalc) {\n        fixNestedCalc(cssTree.stylesheet.rules);\n    }\n\n    // Return CSS string\n    return stringifyCss(cssTree);\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Filters rules recursively, retaining only declarations that contain either a\n * CSS variable definition (property) or function (value). Maintains all\n * declarations for @font-face and @keyframes rules that contain a CSS\n * definition or function.\n *\n * @param {array} rules\n * @returns {array}\n */\nfunction filterVars(rules) {\n    return rules.filter(rule => {\n        // Rule, @font-face, @host, @page\n        if (rule.declarations) {\n            const declArray = rule.declarations.filter(d => {\n                const hasVarProp = d.property && d.property.indexOf(VAR_PROP_IDENTIFIER) === 0;\n                const hasVarVal  = d.value && d.value.indexOf(VAR_FUNC_IDENTIFIER + '(') > -1;\n\n                return hasVarProp || hasVarVal;\n            });\n\n            // For most rule types the filtered declarations should be applied.\n            // @font-face declaratons are unique and require all declarations to\n            // be retained if any declaration contains a CSS variable definition\n            // or value.\n            if (rule.type !== 'font-face') {\n                rule.declarations = declArray;\n            }\n\n            return Boolean(declArray.length);\n        }\n        // @keyframes\n        else if (rule.keyframes) {\n            // @keyframe rules require all declarations to be retained if any\n            // declaration contains a CSS variable definition or value.\n            return Boolean(rule.keyframes.filter(k =>\n                Boolean(k.declarations.filter(d => {\n                    const hasVarProp = d.property && d.property.indexOf(VAR_PROP_IDENTIFIER) === 0;\n                    const hasVarVal  = d.value && d.value.indexOf(VAR_FUNC_IDENTIFIER + '(') > -1;\n\n                    return hasVarProp || hasVarVal;\n                }).length)\n            ).length);\n        }\n        // @document, @media, @supports\n        else if (rule.rules) {\n            rule.rules = filterVars(rule.rules).filter(r => r.declarations && r.declarations.length);\n\n            return Boolean(rule.rules.length);\n        }\n\n        return true;\n    });\n}\n\n/**\n * Removes nested calc keywords for legacy browser compatibility.\n * Example: calc(1 + calc(2 + calc(3 + 3))) => calc(1 + (2 + (3 + 3)))\n *\n * @param {array} rules\n */\nfunction fixNestedCalc(rules) {\n    const reCalcExp = /(-[a-z]+-)?calc\\(/; // Match \"calc(\" or \"-vendor-calc(\"\n\n    rules.forEach(rule => {\n        if (rule.declarations) {\n            rule.declarations.forEach(decl => {\n                let oldValue = decl.value;\n                let newValue = '';\n\n                while (reCalcExp.test(oldValue)) {\n                    const rootCalc = balanced('calc(', ')', oldValue || '');\n\n                    oldValue = oldValue.slice(rootCalc.end);\n\n                    while (reCalcExp.test(rootCalc.body)) {\n                        const nestedCalc = balanced(reCalcExp, ')', rootCalc.body);\n\n                        rootCalc.body = `${nestedCalc.pre}(${nestedCalc.body})${nestedCalc.post}`;\n                    }\n\n                    newValue += `${rootCalc.pre}calc(${rootCalc.body}`;\n                    newValue += !reCalcExp.test(oldValue) ? `)${rootCalc.post}` : '';\n                }\n\n                decl.value = newValue || decl.value;\n            });\n        }\n    });\n}\n\n/**\n * Resolve CSS variables in a value\n *\n * The second argument to a CSS variable function, if provided, is a fallback\n * value, which is used as the substitution value when the referenced variable\n * is invalid.\n *\n * var(name[, fallback])\n *\n * @param {string} value A property value containing a CSS variable function\n * @param {object} map A map of variable names and values\n * @param {object} settings Settings object passed from transformVars()\n * @return {string} A new value with CSS variables substituted or using fallback\n */\nfunction resolveValue(value, map, settings) {\n    // matches `name[, fallback]`, captures 'name' and 'fallback'\n    const RE_VAR = /([\\w-]+)(?:\\s*,\\s*)?(.*)?/;\n    const balancedParens = balanced('(', ')', value);\n    const varStartIndex  = value.indexOf('var(');\n    const varRef         = balanced('(', ')', value.substring(varStartIndex)).body;\n    const warningIntro   = 'CSS transform warning:';\n\n    /* istanbul ignore next */\n    if (!balancedParens) {\n        settings.onWarning(`${warningIntro} missing closing \")\" in the value \"${value}\"`);\n    }\n\n    /* istanbul ignore next */\n    if (varRef === '') {\n        settings.onWarning(`${warningIntro} var() must contain a non-whitespace string`);\n    }\n\n    const varFunc = VAR_FUNC_IDENTIFIER + '(' + varRef + ')';\n\n    const varResult = varRef.replace(RE_VAR, function(_, name, fallback) {\n        const replacement = map[name];\n\n        if (!replacement && !fallback) {\n            settings.onWarning(`${warningIntro} variable \"${name}\" is undefined`);\n        }\n\n        if (!replacement && fallback) {\n            return fallback;\n        }\n\n        return replacement;\n    });\n\n    // resolve the variable\n    value = value.split(varFunc).join(varResult);\n\n    // recursively resolve any remaining variables in the value\n    if (value.indexOf(VAR_FUNC_IDENTIFIER + '(') !== -1) {\n        value = resolveValue(value, map, settings);\n    }\n\n    return value;\n}\n\n\n// Exports\n// =============================================================================\nexport default transformVars;\n","// Dependencies\n// =============================================================================\nimport getCssData          from 'get-css-data';\nimport mergeDeep           from './merge-deep';\nimport transformCss        from './transform-css';\nimport { name as pkgName } from '../package.json';\n\n\n// Constants & Variables\n// =============================================================================\nconst defaults = {\n    // Sources\n    include      : 'style,link[rel=stylesheet]',\n    exclude      : '',\n    // Options\n    fixNestedCalc: true,  // transformCss\n    onlyLegacy   : true,  // cssVars\n    onlyVars     : false, // cssVars, transformCss\n    preserve     : false, // transformCss\n    silent       : false, // cssVars\n    updateDOM    : true,  // cssVars\n    updateURLs   : true,  // cssVars\n    variables    : {},    // transformCss\n    // Callbacks\n    onBeforeSend() {},    // cssVars\n    onSuccess() {},       // cssVars\n    onWarning() {},       // transformCss\n    onError() {},         // cssVars\n    onComplete() {}       // cssVars\n};\nconst regex = {\n    // CSS comments\n    cssComments: /\\/\\*[\\s\\S]+?\\*\\//g,\n    // CSS url(...) values\n    cssUrls: /url\\((?!['\"]?(?:data|http|\\/\\/):)['\"]?([^'\")]*)['\"]?\\)/g,\n    // CSS variable :root declarations and var() function values\n    cssVars: /(?:(?::root\\s*{\\s*[^;]*;*\\s*)|(?:var\\(\\s*))(--[^:)]+)(?:\\s*[:)])/\n};\n\n\n// Functions\n// =============================================================================\n/**\n * Fetches, parses, and transforms CSS custom properties from specified\n * <style> and <link> elements into static values, then appends a new <style>\n * element with static values to the DOM to provide CSS custom property\n * compatibility for legacy browsers. Also provides a single interface for\n * live updates of runtime values in both modern and legacy browsers.\n *\n * @preserve\n * @param {object}   [options] Options object\n * @param {string}   [options.include=\"style,link[rel=stylesheet]\"] CSS selector\n *                   matching <link re=\"stylesheet\"> and <style> nodes to\n *                   process\n * @param {string}   [options.exclude] CSS selector matching <link\n *                   rel=\"stylehseet\"> and <style> nodes to exclude from those\n *                   matches by options.include\n * @param {boolean}  [options.fixNestedCalc=true] Removes nested 'calc' keywords\n *                   for legacy browser compatibility.\n * @param {boolean}  [options.onlyLegacy=true] Determines if the ponyfill will\n *                   only generate legacy-compatible CSS in browsers that lack\n *                   native support (i.e., legacy browsers)\n * @param {boolean}  [options.onlyVars=false] Determines if CSS rulesets and\n *                   declarations without a custom property value should be\n *                   removed from the ponyfill-generated CSS\n * @param {boolean}  [options.preserve=false] Determines if the original CSS\n *                   custom property declaration will be retained in the\n *                   ponyfill-generated CSS.\n * @param {boolean}  [options.silent=false] Determines if warning and error\n *                   messages will be displayed on the console\n * @param {boolean}  [options.updateDOM=true] Determines if the ponyfill will\n *                   update the DOM after processing CSS custom properties\n * @param {boolean}  [options.updateURLs=true] Determines if the ponyfill will\n *                   convert relative url() paths to absolute urls.\n * @param {object}   [options.variables] A map of custom property name/value\n *                   pairs. Property names can omit or include the leading\n *                   double-hyphen (—), and values specified will override\n *                   previous values.\n * @param {function} [options.onBeforeSend] Callback before XHR is sent. Passes\n *                   1) the XHR object, 2) source node reference, and 3) the\n *                   source URL as arguments.\n * @param {function} [options.onSuccess] Callback after CSS data has been\n *                   collected from each node and before CSS custom properties\n *                   have been transformed. Allows modifying the CSS data before\n *                   it is transformed by returning any string value (or false\n *                   to skip). Passes 1) CSS text, 2) source node reference, and\n *                   3) the source URL as arguments.\n * @param {function} [options.onWarning] Callback after each CSS parsing warning\n *                   has occurred. Passes 1) a warning message as an argument.\n * @param {function} [options.onError] Callback after a CSS parsing error has\n *                   occurred or an XHR request has failed. Passes 1) an error\n *                   message, and 2) source node reference, 3) xhr, and 4 url as\n *                   arguments.\n * @param {function} [options.onComplete] Callback after all CSS has been\n *                   processed, legacy-compatible CSS has been generated, and\n *                   (optionally) the DOM has been updated. Passes 1) a CSS\n *                   string with CSS variable values resolved, and 2) a\n *                   reference to the appended <style> node.\n *\n * @example\n *\n *   cssVars({\n *     include      : 'style,link[rel=\"stylesheet\"]', // default\n *     exclude      : '',\n *     fixNestedCalc: true,  // default\n *     onlyLegacy   : true,  // default\n *     onlyVars     : false, // default\n *     preserve     : false, // default\n *     silent       : false, // default\n *     updateDOM    : true,  // default\n *     updateURLs   : true,  // default\n *     variables    : {\n *       // ...\n *     },\n *     onBeforeSend(xhr, node, url) {\n *       // ...\n *     }\n *     onSuccess(cssText, node, url) {\n *       // ...\n *     },\n *     onWarning(message) {\n *       // ...\n *     },\n *     onError(message, node) {\n *       // ...\n *     },\n *     onComplete(cssText, styleNode) {\n *       // ...\n *     }\n *   });\n */\nfunction cssVars(options = {}) {\n    const settings = mergeDeep(defaults, options);\n\n    function handleError(message, sourceNode, xhr, url) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.error(`${message}\\n`, sourceNode);\n        }\n\n        settings.onError(message, sourceNode, xhr, url);\n    }\n\n    function handleWarning(message) {\n        /* istanbul ignore next */\n        if (!settings.silent) {\n            // eslint-disable-next-line\n            console.warn(message);\n        }\n\n        settings.onWarning(message);\n    }\n\n    // Verify readyState to ensure all <link> and <style> nodes are available\n    if (document.readyState !== 'loading') {\n        const hasNativeSupport = window.CSS && window.CSS.supports && window.CSS.supports('(--a: 0)');\n\n        // Lacks native support or onlyLegacy 'false'\n        if (!hasNativeSupport || !settings.onlyLegacy) {\n            const styleNodeId = pkgName;\n\n            getCssData({\n                include: settings.include,\n                // Always exclude styleNodeId element, which is the generated\n                // <style> node containing previously transformed CSS.\n                exclude: `#${styleNodeId}` + (settings.exclude ? `,${settings.exclude}` : ''),\n                // This filter does a test on each block of CSS. An additional\n                // filter is used in the parser to remove individual\n                // declarations.\n                filter : settings.onlyVars ? regex.cssVars : null,\n                onBeforeSend: settings.onBeforeSend,\n                onSuccess(cssText, node, url) {\n                    const returnVal = settings.onSuccess(cssText, node, url);\n\n                    cssText = returnVal === false ? '' : returnVal || cssText;\n\n                    // Convert relative url(...) values to absolute\n                    if (settings.updateURLs) {\n                        const cssUrls = cssText\n                            // Remove comments to avoid processing @import in comments\n                            .replace(regex.cssComments, '')\n                            // Match url(...) values\n                            .match(regex.cssUrls) || [];\n\n                        cssUrls.forEach(cssUrl => {\n                            const oldUrl = cssUrl.replace(regex.cssUrls, '$1');\n                            const newUrl = getFullUrl(oldUrl, url);\n\n                            cssText = cssText.replace(cssUrl, cssUrl.replace(oldUrl, newUrl));\n                        });\n                    }\n\n                    return cssText;\n                },\n                onError(xhr, node, url) {\n                    const responseUrl = xhr.responseURL || getFullUrl(url, location.href);\n                    const statusText  = xhr.statusText ? `(${xhr.statusText})` : 'Unspecified Error' + (xhr.status === 0 ? ' (possibly CORS related)' : '');\n                    const errorMsg    = `CSS XHR Error: ${responseUrl} ${xhr.status} ${statusText}`;\n\n                    handleError(errorMsg, node, xhr, responseUrl);\n                },\n                onComplete(cssText, cssArray, nodeArray) {\n                    const cssMarker = /\\/\\*__CSSVARSPONYFILL-(\\d+)__\\*\\//g;\n                    let   styleNode = null;\n\n                    // Concatenate cssArray items, replacing those that do not\n                    // contain a CSS custom property declaraion or function with\n                    // a temporary marker . After the CSS is transformed, the\n                    // markers will be replaced with the matching cssArray item.\n                    // This optimization is done to avoid processing CSS that\n                    // will not change as a results of the ponyfill.\n                    cssText = cssArray.map((css, i) => regex.cssVars.test(css) ? css : `/*__CSSVARSPONYFILL-${i}__*/`).join('');\n\n                    try {\n                        cssText = transformCss(cssText, {\n                            fixNestedCalc: settings.fixNestedCalc,\n                            onlyVars     : settings.onlyVars,\n                            persist      : settings.updateDOM,\n                            preserve     : settings.preserve,\n                            variables    : settings.variables,\n                            onWarning    : handleWarning\n                        });\n\n                        let cssMarkerMatch = cssMarker.exec(cssText);\n\n                        // Replace markers with appropriate cssArray item\n                        while (cssMarkerMatch !== null) {\n                            const matchedText   = cssMarkerMatch[0];\n                            const cssArrayIndex = cssMarkerMatch[1];\n\n                            cssText = cssText.replace(matchedText, cssArray[cssArrayIndex]);\n                            cssMarkerMatch = cssMarker.exec(cssText);\n                        }\n\n                        if (settings.updateDOM && nodeArray && nodeArray.length) {\n                            const lastNode = nodeArray[nodeArray.length - 1];\n\n                            styleNode = document.querySelector(`#${styleNodeId}`) || document.createElement('style');\n                            styleNode.setAttribute('id', styleNodeId);\n\n                            if (styleNode.textContent !== cssText) {\n                                styleNode.textContent = cssText;\n                            }\n\n                            // Insert <style> element after last nodeArray item\n                            if (lastNode.nextSibling !== styleNode) {\n                                lastNode.parentNode.insertBefore(styleNode, lastNode.nextSibling);\n                            }\n                        }\n                    }\n                    catch(err) {\n                        let errorThrown = false;\n\n                        // Iterate cssArray to detect CSS text and node(s)\n                        // responsibile for error.\n                        cssArray.forEach((cssText, i) => {\n                            try {\n                                cssText = transformCss(cssText, settings);\n                            }\n                            catch(err) {\n                                const errorNode = nodeArray[i - 0];\n\n                                errorThrown = true;\n                                handleError(err.message, errorNode);\n                            }\n                        });\n\n                        // In the event the error thrown was not due to\n                        // transformCss, handle the original error.\n                        /* istanbul ignore next */\n                        if (!errorThrown) {\n                            handleError(err.message || err);\n                        }\n                    }\n\n                    settings.onComplete(cssText, styleNode);\n                }\n            });\n        }\n        // Has native support\n        else if (hasNativeSupport && settings.updateDOM) {\n            // Set variables using native methods\n            Object.keys(settings.variables).forEach(key => {\n                // Convert all property names to leading '--' style\n                const prop  = `--${key.replace(/^-+/, '')}`;\n                const value = settings.variables[key];\n\n                document.documentElement.style.setProperty(prop, value);\n            });\n        }\n    }\n    // Delay function until DOMContentLoaded event is fired\n    /* istanbul ignore next */\n    else {\n        document.addEventListener('DOMContentLoaded', function init(evt) {\n            cssVars(options);\n\n            document.removeEventListener('DOMContentLoaded', init);\n        });\n    }\n}\n\n\n// Functions (Private)\n// =============================================================================\n/**\n * Returns fully qualified URL from relative URL and (optional) base URL\n *\n * @param {any} url\n * @param {any} [base=location.href]\n * @returns\n */\nfunction getFullUrl(url, base = location.href) {\n    const d = document.implementation.createHTMLDocument('');\n    const b = d.createElement('base');\n    const a = d.createElement('a');\n\n    d.head.appendChild(b);\n    d.body.appendChild(a);\n    b.href = base;\n    a.href = url;\n\n    return a.href;\n}\n\n\n// Export\n// =============================================================================\nexport default cssVars;\n"]}